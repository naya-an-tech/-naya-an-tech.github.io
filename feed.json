{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Ayaan(NaYa) Tech Blog",
  "home_page_url": "https://naya-an-tech.github.io",
  "feed_url": "https://naya-an-tech.github.io/feed.json",
  "description": "🚀 Developer Life History",
  "icon": "/app/immutable/assets/avatar.BOw8CoKk.png",
  "favicon": "https://naya-an-tech.github.io/favicon.png",
  "authors": [
    {
      "name": "GiCheon Seong(Ayaan)",
      "url": "https://github.com/kichunsung",
      "avatar": "/app/immutable/assets/avatar.BOw8CoKk.png"
    }
  ],
  "language": "ko-KR",
  "items": [
    {
      "id": "use-alembic-to-already-operation-db",
      "url": "https://naya-an-tech.github.io/use-alembic-to-already-operation-db",
      "title": "운영중인 데이터베이스 alembic 적용 시켜보기",
      "summary": "운영되고있는 DB에 alembic을 적용시켜보자",
      "image": "/use-alembic-to-already-operation-db/cover.jpg",
      "date_published": "2024-06-15T16:21:46.689Z",
      "date_modified": "2024-06-15T16:21:46.690Z",
      "content_text": "레거시 프로젝트를 담당하다보면 model이 선언되어있지않고, DB 관리가 안되고 있는 경우도 종종 있다.\n\n아래의 방법으로 기존 DB 테이블들을 alembic으로 관리해보자.\n\nAlembic은 SQLAlchemy와 함께 사용되며, 데이터베이스 스키마를 버전 관리할 수 있도록 도와준다.\n\n가장 좋은 점은 파이썬 코드로 관리가 가능하여, git으로 관리가 가능하다고 생각한다.\n\n\n1. ALEMBIC 설치\n\n먼저 Alembic을 설치\n\n{@html String.raw`\npip install alembic `}\n\n\n\n\n2. ALEMBIC 초기화\n\n프로젝트 디렉터리에서 Alembic을 초기화\n\nalembic 디렉터리를 생성하고 기본 구성 파일과 스크립트를 생성\n\n{@html String.raw`\nalembic init alembic `}\n\n\n3. ALEMBIC 설정 파일 구성\n\nalembic.ini 파일을 열어 데이터베이스 연결 문자열을 설정\n\n예를 들어, PostgreSQL 데이터베이스를 사용한다면:\n\n{@html String.raw`\n# alembic.ini\n\n[alembic]\n# path to migration scripts\nscript_location = alembic\n\n[loggers]\nkeys = root,sqlalchemy,alembic\n\n[handlers]\nkeys = console\n\n[formatters]\nkeys = generic\n\n[logger_root]\nlevel = WARN\nhandlers = console\nqualname =\n\n[logger_sqlalchemy]\nlevel = WARN\nhandlers = console\nqualname = sqlalchemy.engine\npropagate = 0\n\n[logger_alembic]\nlevel = INFO\nhandlers = console\nqualname = alembic\npropagate = 0\n\n[handler_console]\nclass = StreamHandler\nargs = (sys.stderr,)\nlevel = NOTSET\nformatter = generic\n\n[formatter_generic]\nformat = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s\n\n# PostgreSQL example\nsqlalchemy.url = postgresql://user:password@localhost/dbname\n`}\n\n\n\n\n4. ENV.PY 파일 설정\n\nalembic/env.py 파일을 열고 SQLAlchemy 모델을 연결\n\n기존 SQLAlchemy 모델을 사용하여 데이터베이스를 반영하자.\n\n{@html String.raw`\n# alembic/env.py\n\nfrom logging.config import fileConfig\nfrom sqlalchemy import engine_from_config, pool\nfrom alembic import context\n\n# this is the Alembic Config object, which provides\n# access to the values within the .ini file in use.\nconfig = context.config\n\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nfileConfig(config.config_file_name)\n\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata\nfrom app.models import Base  # Import your Base model\ntarget_metadata = Base.metadata\n\n# other values from the config, defined by the needs of env.py,\n# can be acquired:\n# my_important_option = config.get_main_option(\"my_important_option\")\n# ... etc.\n\n\ndef run_migrations_offline():\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation\n    we don't even need a DBAPI to be available.\n    Calls to context.execute() here emit the given string to the\n    script output.\n    \"\"\"\n    url = config.get_main_option(\"sqlalchemy.url\")\n    context.configure(\n        url=url, target_metadata=target_metadata, literal_binds=True\n    )\n\n    with context.begin_transaction():\n        context.run_migrations()\n\n\ndef run_migrations_online():\n    \"\"\"Run migrations in 'online' mode.\n    In this scenario we need to create an Engine\n    and associate a connection with the context.\n    \"\"\"\n    connectable = engine_from_config(\n        config.get_section(config.config_ini_section),\n        prefix=\"sqlalchemy.\",\n        poolclass=pool.NullPool,\n    )\n\n    with connectable.connect() as connection:\n        context.configure(connection=connection, target_metadata=target_metadata)\n\n        with context.begin_transaction():\n            context.run_migrations()\n\n\nif context.is_offline_mode():\n    run_migrations_offline()\nelse:\n    run_migrations_online()\n`}\n\n\n5. 기존 데이터베이스 상태 스냅샷 생성\n\n기존 데이터베이스의 현재 상태를 스냅샷으로 생성하여 Alembic이 현재 상태를 인식하도록 한다.\n\n이를 위해 revision --autogenerate 명령어를 사용합니다.\n\n{@html String.raw`\nalembic revision --autogenerate -m \"Initial migration\"`}\n\n이 명령어는 현재 데이터베이스 스키마를 기반으로 새로운 마이그레이션 파일을 생성한다.\n\n생성된 파일을 열어 마이그레이션 코드가 올바른지 확인은 필수이다.\n\n\n6. 데이터베이스 마이그레이션 적용\n\n생성된 마이그레이션 파일을 사용하여 데이터베이스에 변경 사항을 적용하면 끝난다.\n\n{@html String.raw`\nalembic upgrade head`}\n\n\n요약\n\n전체 과정을 아래와 같이 요약해 보았다.\n\n 1. Alembic을 설치하고 초기화합니다.\n 2. alembic.ini\n 3. env.py\n 4. 기존 데이터베이스 상태를 스냅샷으로 생성합니다.\n 5. 데이터베이스 마이그레이션을 적용합니다.\n\n\n\n작성하다보니, model.py code도 어디에서도 찾을 수 없고 수 십, 수 백 테이블을 사용 있다면… models을 한번에 생성하는 방법은\n없을까..?! 고민된다.",
      "content_html": "<p>레거시 프로젝트를 담당하다보면  model이 선언되어있지않고, DB 관리가 안되고 있는 경우도 종종 있다.</p>\n<p>아래의 방법으로 기존 DB 테이블들을 alembic으로 관리해보자.</p>\n<p>Alembic은 SQLAlchemy와 함께 사용되며, 데이터베이스 스키마를 버전 관리할 수 있도록 도와준다.</p>\n<p>가장 좋은 점은 파이썬 코드로 관리가 가능하여, git으로 관리가 가능하다고 생각한다.</p>\n<h1 id=\"1-alembic\"><a href=\"#1-alembic\">1. Alembic 설치</a></h1>\n<p>먼저 Alembic을 설치</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">pip <span class=\"token function\">install</span> alembic </div></div>`}</code></pre></CodeCopy></div>\n<p><ImgZoom src=\"/use-alembic-to-already-operation-db/0_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<h1 id=\"2-alembic\"><a href=\"#2-alembic\">2. Alembic 초기화</a></h1>\n<p>프로젝트 디렉터리에서 Alembic을 초기화</p>\n<p> alembic 디렉터리를 생성하고 기본 구성 파일과 스크립트를 생성</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">alembic init alembic </div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"3-alembic\"><a href=\"#3-alembic\">3. Alembic 설정 파일 구성</a></h1>\n<p>alembic.ini 파일을 열어 데이터베이스 연결 문자열을 설정</p>\n<p>예를 들어, PostgreSQL 데이터베이스를 사용한다면:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-plain\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"># alembic.ini</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[alembic]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"># path to migration scripts</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">script_location = alembic</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[loggers]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">keys = root,sqlalchemy,alembic</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[handlers]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">keys = console</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[formatters]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">keys = generic</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[logger_root]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">level = WARN</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">handlers = console</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">qualname =</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[logger_sqlalchemy]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">level = WARN</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">handlers = console</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">qualname = sqlalchemy.engine</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">propagate = 0</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[logger_alembic]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">level = INFO</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">handlers = console</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">qualname = alembic</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">propagate = 0</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[handler_console]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">class = StreamHandler</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">args = (sys.stderr,)</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">level = NOTSET</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">formatter = generic</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">[formatter_generic]</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"># PostgreSQL example</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">sqlalchemy.url = postgresql://user:password@localhost/dbname</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div>`}</code></pre></CodeCopy></div>\n<p><ImgZoom src=\"/use-alembic-to-already-operation-db/1_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<h1 id=\"4-env-py\"><a href=\"#4-env-py\">4.  env.py 파일 설정</a></h1>\n<p>alembic/env.py 파일을 열고 SQLAlchemy 모델을 연결</p>\n<p>기존 SQLAlchemy 모델을 사용하여 데이터베이스를 반영하자.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-python\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># alembic/env.py</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> logging<span class=\"token punctuation\">.</span>config <span class=\"token keyword\">import</span> fileConfig</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> sqlalchemy <span class=\"token keyword\">import</span> engine_from_config<span class=\"token punctuation\">,</span> pool</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> alembic <span class=\"token keyword\">import</span> context</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># this is the Alembic Config object, which provides</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># access to the values within the .ini file in use.</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">config <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span>config</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># Interpret the config file for Python logging.</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># This line sets up loggers basically.</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">fileConfig<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>config_file_name<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># add your model's MetaData object here</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># for 'autogenerate' support</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># from myapp import mymodel</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># target_metadata = mymodel.Base.metadata</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Base  <span class=\"token comment\"># Import your Base model</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">target_metadata <span class=\"token operator\">=</span> Base<span class=\"token punctuation\">.</span>metadata</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># other values from the config, defined by the needs of env.py,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># can be acquired:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># my_important_option = config.get_main_option(\"my_important_option\")</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># ... etc.</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">def</span> <span class=\"token function\">run_migrations_offline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token triple-quoted-string string\">\"\"\"Run migrations in 'offline' mode.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    This configures the context with just a URL</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    and not an Engine, though an Engine is acceptable</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    here as well.  By skipping the Engine creation</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    we don't even need a DBAPI to be available.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Calls to context.execute() here emit the given string to the</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    script output.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"\"\"</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    url <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>get_main_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"sqlalchemy.url\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    context<span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> target_metadata<span class=\"token operator\">=</span>target_metadata<span class=\"token punctuation\">,</span> literal_binds<span class=\"token operator\">=</span><span class=\"token boolean\">True</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">with</span> context<span class=\"token punctuation\">.</span>begin_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        context<span class=\"token punctuation\">.</span>run_migrations<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">def</span> <span class=\"token function\">run_migrations_online</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token triple-quoted-string string\">\"\"\"Run migrations in 'online' mode.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    In this scenario we need to create an Engine</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    and associate a connection with the context.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    \"\"\"</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    connectable <span class=\"token operator\">=</span> engine_from_config<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        config<span class=\"token punctuation\">.</span>get_section<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>config_ini_section<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        prefix<span class=\"token operator\">=</span><span class=\"token string\">\"sqlalchemy.\"</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        poolclass<span class=\"token operator\">=</span>pool<span class=\"token punctuation\">.</span>NullPool<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">with</span> connectable<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> connection<span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        context<span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span>connection<span class=\"token operator\">=</span>connection<span class=\"token punctuation\">,</span> target_metadata<span class=\"token operator\">=</span>target_metadata<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token keyword\">with</span> context<span class=\"token punctuation\">.</span>begin_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            context<span class=\"token punctuation\">.</span>run_migrations<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">if</span> context<span class=\"token punctuation\">.</span>is_offline_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    run_migrations_offline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    run_migrations_online<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"5\"><a href=\"#5\">5. 기존 데이터베이스 상태 스냅샷 생성</a></h1>\n<p>기존 데이터베이스의 현재 상태를 스냅샷으로 생성하여 Alembic이 현재 상태를 인식하도록 한다.</p>\n<p>이를 위해 revision --autogenerate 명령어를 사용합니다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-plain\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">alembic revision --autogenerate -m \"Initial migration\"</div></div>`}</code></pre></CodeCopy></div>\n<p>이 명령어는 현재 데이터베이스 스키마를 기반으로 새로운 마이그레이션 파일을 생성한다.</p>\n<p>생성된 파일을 열어 마이그레이션 코드가 올바른지 확인은 필수이다.</p>\n<h1 id=\"6\"><a href=\"#6\">6. 데이터베이스 마이그레이션 적용</a></h1>\n<p>생성된 마이그레이션 파일을 사용하여 데이터베이스에 변경 사항을 적용하면 끝난다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">alembic upgrade <span class=\"token function\">head</span></div></div>`}</code></pre></CodeCopy></div>\n<h3 id=\"\"><a href=\"#\">요약</a></h3>\n<p>전체 과정을 아래와 같이 요약해 보았다.</p>\n<ol>\n<li>Alembic을 설치하고 초기화합니다.</li>\n<li>alembic.ini</li>\n<li>env.py</li>\n<li>기존 데이터베이스 상태를 스냅샷으로 생성합니다.</li>\n<li>데이터베이스 마이그레이션을 적용합니다.</li>\n</ol>\n<p><ImgZoom src=\"/use-alembic-to-already-operation-db/2_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<p>작성하다보니, model.py code도 어디에서도 찾을 수 없고 수 십, 수 백 테이블을 사용 있다면… models을 한번에 생성하는 방법은 없을까..?! 고민된다.</p>\n",
      "tags": [
        "python",
        "database",
        "db",
        "alembic",
        "dbmigration",
        "디비마이그레이션",
        "파이썬",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "sveltekit-load-data-optimization",
      "url": "https://naya-an-tech.github.io/sveltekit-load-data-optimization",
      "title": "[SvelteKit] 데이터 load 최적화 해보기",
      "summary": "csr , ssr 동시에 사용하기!",
      "image": "/sveltekit-load-data-optimization/cover.jpg",
      "date_published": "2024-06-15T15:51:46.230Z",
      "date_modified": "2024-06-15T17:01:38.151Z",
      "content_text": "sveltekit에서 페이지 로딩시 데이터를 불러오는 방법은 크게 두 가지가 있다.\n\n+page.js : CSR 클라이언트 단에서 데이터를 로드한다.\n\n+page.server.js : SSR 서버단에서 데이터를 로드한다.\n\n그런데 이런 경우를 생각해보자.\n\n상품 리스트를 보는 페이지가 있다.\n\n사용자가 로그인시, 내가 좋아요 혹은 찜을 한 상품인 경우 빨간하트를 표시하기위해 is_liked (내가 좋아요 누른상품) 필드로 상품 리스트를\n구별한다고 해보자.\n\n이걸 서버사이드에서 구현한다고하면,\n\n * get_product_list (offset, limit)\n * get_my_like_product_by_product_id(user_id, product_ids)\n * return\n\n이렇게 상품정보와 내가 좋아요를 누른 상품들 정보를 가지고와서 합쳐서 내보낼 것이다.\n\n서버사이드로 구현시 유저 별 정보를 제공할 때 비효율이 발생한다. (SEO 측면에서도 좋지않을 것 같다)\n\n상품정보는 서버단에서 가져오고, 내가 좋아요를 누른 상품정보는 클라이언트 단에서 가져와 합쳐서 사용하는 방식이 효율적이지 않을까? 라는 점에서\n두개 모두 사용하는 방법에 대해서 알아보았다.\n\n도큐먼트를 읽어보면 페이지를 로드할 때 실행되는 순서를 확인해보면 아래와 같다.\n\n\n\n+page.server.js → +page.js → +page.svelte 순서로 데이터가 흘러감.\n\n위순서를 생각해서 코드를 작성해보자.\n\n\n1. 간단한 라우트 생성\n\n아래와 같이 sveltekit project에서 products 라우트를 생성한다.\n\n{@html String.raw`\nsveltekit-project\n├── src\n│   ├── routes\n│   │   ├── products\n│   │   │   ├── +page.js\n│   │   │   ├── +page.server.js\n│   │   │   └── +page.svelte\n│   └── app.html\n└── svelte.config.js`}\n\n\n2. +PAGE.SERVER.JS 작성\n\n서버단에서는 프로덕트 리스트를 불러온다.\n\n{@html String.raw`\n// src/routes/products/+page.server.js\nimport {getProducts} from '$lib/api/products';\n\n\nexport function load({ url }) {\n  const searchParams = url.searchParams;\n  const page = parseInt(searchParams.get('page')) || 1;\n  \n  const response = await getProducts({page:page,size:20})\n  \n  return {\n    products: response.results\n  };\n}`}\n\n\n3. +PAGE.JS 작성\n\n클라이언트 단에서 +page.server.js 의 data를 받아, 유저가 좋아요를 누른 상품 정보를 가져와 정보를 추가해 준다.\n\n{@html String.raw`\n// src/routes/products/+page.js\nimport {getLikedProductByIds} from '$lib/api/products';\nimport {mergeProductInfo} from '$lib/common/utils';\nexport async function load({ data, fetch }) {\n  // 서버에서 받은 데이터를 클라이언트로 전달\n  \n  // id list 생성\n  let product_ids = data.products.map((product) => product.id);\n\n  // 클라이언트 측에서 추가 데이터 로드 예시 (여기서는 동일한 데이터 사용)\n  const response = await getLikedProductByIds({ids:product_ids});\n        for (const [k, v] of Object.entries(response)) {\n        if (org_dict.hasOwnProperty(k)) {\n            org_dict[k][\"like\"] = v;\n        }\n    }\n    // 좋아요 정보를 product에 추가\n    await mergeProductInfo(data.products , response)\n\n  return {...data};\n}`}\n\n\n4. +PAGE.SVELTE 에서 사용하기\n\n사용할 땐 2가지 방법이 있다.\n\n해당 load 함수를 직접 import 하여 사용하는 방법.\n\n이 방법으로 받을 때는 예약어인 data를 미리 구조분해해서 받을 수 있다.\n\n{@html String.raw`\n<script context=\"module\">\n  export { load } from './+page.js';\n</script>\n\n<script>\n  export let products;\n</script>\n\n<main>\n  ... // product list container\n</main>\n\n<style>\n  a[disabled] {\n    pointer-events: none;\n    color: grey;\n  }\n</style>`}\n\n혹은 아래처럼 예약된 data를 통해 구조분해 할당으로 데이터를 받는다.\n\n{@html String.raw`\n<script>\n  export let data;\n\n  const { products, meta } = data;\n</script>\n\n<main>\n  ... // product list container\n</main>\n\n<style>\n  a[disabled] {\n    pointer-events: none;\n    color: grey;\n  }\n</style>`}\n\n상품 데이터는 서버로 부터, 유저의 좋아요 정보는 클라이언트에서 받아오도록 분리하였다.\n\n이렇게 서버단 클라이언트단을 분리하여 가져오도록하면 캐싱면에서도 효율적이다.",
      "content_html": "<p>sveltekit에서 페이지 로딩시 데이터를 불러오는 방법은 크게 두 가지가 있다. </p>\n<p>+page.js : CSR 클라이언트 단에서 데이터를 로드한다.</p>\n<p>+page.server.js : SSR 서버단에서 데이터를 로드한다.</p>\n<p>그런데 이런 경우를 생각해보자.</p>\n<p>상품 리스트를 보는 페이지가 있다. </p>\n<p>사용자가 로그인시, 내가 좋아요 혹은 찜을 한 상품인 경우 빨간하트를 표시하기위해 is_liked (내가 좋아요 누른상품) 필드로 상품 리스트를 구별한다고 해보자.</p>\n<p>이걸 서버사이드에서 구현한다고하면, </p>\n<ul>\n<li>get_product_list (offset, limit)</li>\n<li>get_my_like_product_by_product_id(user_id, product_ids)</li>\n<li>return\n<ImgZoom src=\"/sveltekit-load-data-optimization/0_Untitled.png\" alt=\"image\"></ImgZoom></li>\n</ul>\n<p>이렇게 상품정보와 내가 좋아요를 누른 상품들 정보를 가지고와서 합쳐서 내보낼 것이다.</p>\n<p>서버사이드로 구현시 유저 별 정보를 제공할 때 비효율이 발생한다. (SEO 측면에서도 좋지않을 것 같다)</p>\n<p>상품정보는 서버단에서 가져오고, 내가 좋아요를 누른 상품정보는 클라이언트 단에서 가져와 합쳐서 사용하는 방식이 효율적이지 않을까? 라는 점에서 두개 모두 사용하는 방법에 대해서 알아보았다.</p>\n<p>도큐먼트를 읽어보면 페이지를 로드할 때 실행되는 순서를 확인해보면 아래와 같다.</p>\n<p><ImgZoom src=\"/sveltekit-load-data-optimization/1_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<p>+page.server.js → +page.js → +page.svelte 순서로 데이터가 흘러감.</p>\n<p>위순서를 생각해서 코드를 작성해보자.</p>\n<h1 id=\"1\"><a href=\"#1\">1. 간단한 라우트 생성</a></h1>\n<p>아래와 같이 sveltekit project에서 products 라우트를 생성한다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">sveltekit-project</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">├── src</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">│   ├── routes</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">│   │   ├── products</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">│   │   │   ├── +page.js</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">│   │   │   ├── +page.server.js</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">│   │   │   └── +page.svelte</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">│   └── app.html</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">└── svelte.config.js</div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"2-page-server-js\"><a href=\"#2-page-server-js\">2. +page.server.js 작성</a></h1>\n<p>서버단에서는 프로덕트 리스트를 불러온다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-javascript\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">// src/routes/products/+page.server.js</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">import {getProducts} from '&#36;lib/api/products';</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">export function load({ url }) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  const searchParams = url.searchParams;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  const page = parseInt(searchParams.get('page')) || 1;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  const response = await getProducts({page:page,size:20})</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  return {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    products: response.results</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  };</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"3-page-js\"><a href=\"#3-page-js\">3. +page.js 작성</a></h1>\n<p>클라이언트 단에서 +page.server.js 의 data를 받아, 유저가 좋아요를 누른 상품 정보를 가져와 정보를 추가해 준다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-javascript\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">// src/routes/products/+page.js</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">import {getLikedProductByIds} from '&#36;lib/api/products';</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">import {mergeProductInfo} from '&#36;lib/common/utils';</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">export async function load({ data, fetch }) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  // 서버에서 받은 데이터를 클라이언트로 전달</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  // id list 생성</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  let product_ids = data.products.map((product) =&gt; product.id);</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  // 클라이언트 측에서 추가 데이터 로드 예시 (여기서는 동일한 데이터 사용)</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  const response = await getLikedProductByIds({ids:product_ids});</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        for (const [k, v] of Object.entries(response)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        if (org_dict.hasOwnProperty(k)) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            org_dict[k][\"like\"] = v;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    // 좋아요 정보를 product에 추가</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    await mergeProductInfo(data.products , response)</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  return {...data};</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"4-page-svelte\"><a href=\"#4-page-svelte\">4. +page.svelte 에서 사용하기</a></h1>\n<p>사용할 땐 2가지 방법이 있다. </p>\n<p>해당 load 함수를 직접 import 하여 사용하는 방법.</p>\n<p>이 방법으로 받을 때는 예약어인 data를 미리 구조분해해서 받을 수 있다.  </p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-javascript\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;script context=\"module\"&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  export { load } from './+page.js';</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;/script&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;script&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  export let products;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;/script&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;main&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  ... // product list container</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;/main&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;style&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  a[disabled] {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    pointer-events: none;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    color: grey;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;/style&gt;</div></div>`}</code></pre></CodeCopy></div>\n<p>혹은 아래처럼 예약된 data를 통해 구조분해 할당으로 데이터를 받는다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-javascript\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;script&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  export let data;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  const { products, meta } = data;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;/script&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;main&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  ... // product list container</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;/main&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;style&gt;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  a[disabled] {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    pointer-events: none;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    color: grey;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  }</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&lt;/style&gt;</div></div>`}</code></pre></CodeCopy></div>\n<p>상품 데이터는 서버로 부터, 유저의 좋아요 정보는 클라이언트에서 받아오도록 분리하였다.</p>\n<p>이렇게 서버단 클라이언트단을 분리하여 가져오도록하면 캐싱면에서도 효율적이다.</p>\n",
      "tags": [
        "svelte",
        "sveltekit",
        "스벨트",
        "스벨트킷",
        "data load",
        "CSR",
        "SSR",
        "page.server.js",
        "page.js",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "gitops-local-setting-with-act",
      "url": "https://naya-an-tech.github.io/gitops-local-setting-with-act",
      "title": "[GitOps] git action local 환경 구축 (with act)",
      "image": "/gitops-local-setting-with-act/cover.jpg",
      "date_published": "2024-06-12T12:51:33.107Z",
      "date_modified": "2024-06-12T13:15:37.627Z",
      "content_text": "develop branch 가 업데이트되거나, pr이 생성되었을 때마다 테스트를 실행하거나, release tag가 생성되어 프로덕션을 빌드를\n자동화하기위해 gitops, workflows를 작성하곤한다.\n\n매번 git repo에 올려가며 테스트해왔으나, 번거로움이 많아 로컬에서 동일한 환경을 구축하여 git action을 테스트 해본 뒤\n커밋하기위해 로컬 환경을 구축해보자.\n\n\nACT 설치\n\n먼저 act를 설치합니다.\n\n{@html String.raw`\nbrew install act `}\n\n\n\n\n\n설치가 완료되었다. act는 도커를 사용하고있으므로, 도커가 미리 설치되어있어야합니다.\n\n작업중인 repo로 진입하여 아래의 workflow들을 확인해 본다.\n\n\nWORKFLOW 기본 명령어\n\n{@html String.raw`\n# 기본 workflow 목록 가져오기\nact -l\n\n# m 시리즈 mac일 경우\nact -l --container-architecture linux/amd64\n\n# 특정한 job들만 확인하기\nact -j job_name -l`}\n\n\nWORKFLOW 로컬에서 실행\n\n{@html String.raw`\n# (기본)\nact\n\n# (기본), m시리즈 mac일 경우\nact --container-architecture linux/amd64\n\n# 특정 이벤트 트리거\nact pull_request\n\n# 특정한 job만 실행하기\nact -j job_name\n\n# 특정한 workflow만 실행하기\nact -j jobID -W .github/workflows/[Selected-Workflow].yml`}\n\n\nSECRET 설정\n\n\n실행시 ARG로 넘기기\n\n{@html String.raw`\nact -s KEY=VALUE`}\n\n\n파일로 관리하기 MY.SECRET\n\n** 주의! .gitignore에 my.secret을 등록해두어, commit에 포함되지않도록 잘 관리하길 바란다.\n\n{@html String.raw`\n# my.secrets\nKEY=Value\nKEY=Value\nKEY=Value\nKEY=Value\nKEY=Value`}\n\n{@html String.raw`\nact --secret-file my.secrets`}\n\nSSH_KEY 같은 경우 라인을 많이 차지하고, +와같은 특수문자로인해 파싱애러가 날때가 있습니다.\n\n이럴땐 “ “ 쌍따옴표로 묶어서 사용하도록하자.\n\n{@html String.raw`\nSSH_PRIVATE_KEY=\"-----BEGIN EC PRIVATE KEY-----\n...\n-----END EC PRIVATE KEY-----\"`}\n\n\nACT 실행\n\n처음 실행하면, act runner docker image를 다운받으려한다. 적당히 미디움으로 선택합니다.\n\n{@html String.raw`\nINFO[0000] Using docker host 'unix:///var/run/docker.sock', and daemon socket 'unix:///var/run/docker.sock' \nWARN  ⚠ You are using Apple M-series chip and you have not specified container architecture, you might encounter issues while running act. If so, try running it with '--container-architecture linux/amd64'. ⚠  \n? Please choose the default image you want to use with act:\n  - Large size image: ca. 17GB download + 53.1GB storage, you will need 75GB of free disk space, snapshots of GitHub Hosted Runners without snap and pulled docker images\n  - Medium size image: ~500MB, includes only necessary tools to bootstrap actions and aims to be compatible with most actions\n  - Micro size image: <200MB, contains only NodeJS required to bootstrap actions, doesn't work with all actions\n\nDefault image and other options can be changed manually in ~/.actrc (please refer to https://github.com/nektos/act#configuration for additional information about file structure)  [Use arrows to move, type to filter, ? for more help]\n  Large\n> Medium\n  Micro`}\n\n\n\n{@html String.raw`\n Medium\n[gitops test/manifest-test] 🚀  Start image=catthehacker/ubuntu:act-20.04\n[gitops test/manifest-test]   🐳  docker pull image=catthehacker/ubuntu:act-20.04 platform= username= forcePull=true\n[gitops test/manifest-test] using DockerAuthConfig authentication for docker pull`}\n\n\n실습\n\n.github/workflows 경로에 deploy.yaml 을 하나 작성합니다.\n\n{@html String.raw`\nname: Deploy to Kubernetes\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n\n    - name: Set up Kubernetes CLI\n      uses: azure/setup-kubectl@v1\n      with:\n        version: v1.21.0\n\n    - name: Authenticate to Kubernetes cluster\n      run: |\n        echo \"${{ secrets.KUBE_CONFIG }}\" | base64 --decode > $HOME/.kube/config\n\n    - name: Deploy to Kubernetes\n      run: |\n        kubectl apply -f k8s/`}\n\n\n워크플로우 목록 확인하기\n\nact -l 로 워크플로우 목록을 확인합니다.\n\n\n\nm시리즈 맥북의경우 아키텍쳐 경고가 나옵니다. --container-architecture linux/amd64 옵션을 추가합니다.\n\n\n\n\n특정 워크플로우 실행\n\n하나의 워크플로우를 전체 실행하고싶다면 -W 옵션으로 workflow yaml을 지정하여 실행\n\n{@html String.raw`\nact -W .github/workflows/deploy.yaml`}\n\n\n특정 잡 실행\n\n-j 옵션을 통해 -l 리스트에서 본 job id 로 실행합니다.\n\n{@html String.raw`\nact -j deploy`}",
      "content_html": "<p>develop branch 가 업데이트되거나, pr이 생성되었을 때마다 테스트를 실행하거나, release tag가 생성되어 프로덕션을 빌드를 자동화하기위해 gitops, workflows를 작성하곤한다.</p>\n<p>매번 git repo에 올려가며 테스트해왔으나, 번거로움이 많아 로컬에서 동일한 환경을 구축하여 git action을 테스트 해본 뒤 커밋하기위해 로컬 환경을 구축해보자. </p>\n<h1 id=\"act\"><a href=\"#act\">Act 설치</a></h1>\n<p>먼저 act를 설치합니다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">brew <span class=\"token function\">install</span> act </div></div>`}</code></pre></CodeCopy></div>\n<p><ImgZoom src=\"/gitops-local-setting-with-act/0_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<p><ImgZoom src=\"/gitops-local-setting-with-act/1_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<p>설치가 완료되었다. act는 도커를 사용하고있으므로, 도커가 미리 설치되어있어야합니다.</p>\n<p>작업중인 repo로 진입하여 아래의 workflow들을 확인해 본다.</p>\n<h2 id=\"workflow\"><a href=\"#workflow\">workflow  기본 명령어</a></h2>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-shell\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 기본 workflow 목록 가져오기</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token parameter variable\">-l</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># m 시리즈 mac일 경우</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token parameter variable\">-l</span> --container-architecture linux/amd64</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 특정한 job들만 확인하기</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token parameter variable\">-j</span> job_name <span class=\"token parameter variable\">-l</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"workflow\"><a href=\"#workflow\">workflow 로컬에서 실행</a></h2>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-shell\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># (기본)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># (기본), m시리즈 mac일 경우</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act --container-architecture linux/amd64</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 특정 이벤트 트리거</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act pull_request</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 특정한 job만 실행하기</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token parameter variable\">-j</span> job_name</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 특정한 workflow만 실행하기</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token parameter variable\">-j</span> jobID <span class=\"token parameter variable\">-W</span> .github/workflows/<span class=\"token punctuation\">[</span>Selected-Workflow<span class=\"token punctuation\">]</span>.yml</div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"secret\"><a href=\"#secret\">SECRET  설정</a></h1>\n<h2 id=\"arg\"><a href=\"#arg\">실행시 arg로 넘기기</a></h2>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token parameter variable\">-s</span> <span class=\"token assign-left variable\">KEY</span><span class=\"token operator\">=</span>VALUE</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"my-secret\"><a href=\"#my-secret\">파일로 관리하기 my.secret</a></h2>\n<p>** 주의! .gitignore에 my.secret을 등록해두어, commit에 포함되지않도록 잘 관리하길 바란다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-plain\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"># my.secrets</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">KEY=Value</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">KEY=Value</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">KEY=Value</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">KEY=Value</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">KEY=Value</div></div>`}</code></pre></CodeCopy></div>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act --secret-file my.secrets</div></div>`}</code></pre></CodeCopy></div>\n<p>SSH_KEY 같은 경우 라인을 많이 차지하고, +와같은 특수문자로인해 파싱애러가 날때가 있습니다.</p>\n<p>이럴땐 “ “ 쌍따옴표로 묶어서 사용하도록하자.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token assign-left variable\">SSH_PRIVATE_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"-----BEGIN EC PRIVATE KEY-----</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">...</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">-----END EC PRIVATE KEY-----\"</span></div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"act\"><a href=\"#act\">act 실행</a></h1>\n<p>처음 실행하면, act runner docker image를 다운받으려한다. 적당히 미디움으로 선택합니다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">INFO<span class=\"token punctuation\">[</span>0000<span class=\"token punctuation\">]</span> Using <span class=\"token function\">docker</span> <span class=\"token function\">host</span> <span class=\"token string\">'unix:///var/run/docker.sock'</span>, and daemon socket <span class=\"token string\">'unix:///var/run/docker.sock'</span> </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">WARN  ⚠ You are using Apple M-series chip and you have not specified container architecture, you might encounter issues <span class=\"token keyword\">while</span> running act. If so, try running it with <span class=\"token string\">'--container-architecture linux/amd64'</span><span class=\"token builtin class-name\">.</span> ⚠  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">? Please choose the default image you want to use with act:</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  - Large size image: ca. 17GB download + <span class=\"token number\">53</span>.1GB storage, you will need 75GB of <span class=\"token function\">free</span> disk space, snapshots of GitHub Hosted Runners without snap and pulled <span class=\"token function\">docker</span> images</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  - Medium size image: ~500MB, includes only necessary tools to bootstrap actions and aims to be compatible with <span class=\"token function\">most</span> actions</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  - Micro size image: <span class=\"token operator\">&lt;</span>200MB, contains only NodeJS required to bootstrap actions, doesn't work with all actions</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">Default image and other options can be changed manually <span class=\"token keyword\">in</span> ~/.actrc <span class=\"token punctuation\">(</span>please refer to https://github.com/nektos/act<span class=\"token comment\">#configuration for additional information about file structure)  [Use arrows to move, type to filter, ? for more help]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  Large</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token operator\">></span> Medium</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  Micro</div></div>`}</code></pre></CodeCopy></div>\n<p><ImgZoom src=\"/gitops-local-setting-with-act/2_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"> Medium</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">[</span>gitops test/manifest-test<span class=\"token punctuation\">]</span> 🚀  Start <span class=\"token assign-left variable\">image</span><span class=\"token operator\">=</span>catthehacker/ubuntu:act-20.04</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">[</span>gitops test/manifest-test<span class=\"token punctuation\">]</span>   🐳  <span class=\"token function\">docker</span> pull <span class=\"token assign-left variable\">image</span><span class=\"token operator\">=</span>catthehacker/ubuntu:act-20.04 <span class=\"token assign-left variable\">platform</span><span class=\"token operator\">=</span> <span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span> <span class=\"token assign-left variable\">forcePull</span><span class=\"token operator\">=</span>true</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">[</span>gitops test/manifest-test<span class=\"token punctuation\">]</span> using DockerAuthConfig authentication <span class=\"token keyword\">for</span> <span class=\"token function\">docker</span> pull</div></div>`}</code></pre></CodeCopy></div>\n<h1 id=\"\"><a href=\"#\">실습</a></h1>\n<p>.github/workflows 경로에 deploy.yaml 을 하나 작성합니다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-yaml\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to Kubernetes</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">      <span class=\"token punctuation\">-</span> main</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout code</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set up Kubernetes CLI</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> azure/setup<span class=\"token punctuation\">-</span>kubectl@v1</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> v1.21.0</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Authenticate to Kubernetes cluster</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        echo \"&#36;{{ secrets.KUBE_CONFIG }}\" | base64 --decode > &#36;HOME/.kube/config</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to Kubernetes</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        kubectl apply -f k8s/</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"\"><a href=\"#\">워크플로우 목록 확인하기</a></h2>\n<p>act -l 로 워크플로우 목록을 확인합니다.</p>\n<p><ImgZoom src=\"/gitops-local-setting-with-act/3_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<p>m시리즈 맥북의경우 아키텍쳐 경고가 나옵니다. --container-architecture linux/amd64  옵션을 추가합니다.</p>\n<p><ImgZoom src=\"/gitops-local-setting-with-act/4_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<h2 id=\"\"><a href=\"#\">특정 워크플로우 실행</a></h2>\n<p>하나의 워크플로우를 전체 실행하고싶다면 -W 옵션으로 workflow yaml을 지정하여 실행</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-yaml\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token punctuation\">-</span>W .github/workflows/deploy.yaml</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"\"><a href=\"#\">특정 잡 실행</a></h2>\n<p>-j 옵션을 통해 -l 리스트에서 본 job id 로 실행합니다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-yaml\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">act <span class=\"token punctuation\">-</span>j deploy</div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "gitops",
        "k8s",
        "act",
        "local-setting",
        "environment",
        "깃옵스",
        "로컬환경구축",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "es-dsl-tutorial-connection-index",
      "url": "https://naya-an-tech.github.io/es-dsl-tutorial-connection-index",
      "title": "[Elasticsearch] elasticsearch dsl 파이썬 예제 - 연결, 색인",
      "summary": "elasticsearch-dsl 사용 예제, 기존 코드와 비교",
      "image": "/es-dsl-tutorial-connection-index/0_Untitled.png",
      "date_published": "2024-06-09T12:30:38.416Z",
      "date_modified": "2024-06-09T12:35:05.559Z",
      "content_text": "ELASTICSEARCH DSL 사용 예제 - 1편 - 연결과 색인\n\nelasticsearch dsl을 통해서 elasticsearch를 사용해보려한다.\n\n기존 사용방법들도 함께 첨부하면서 어떤점이 달라지는지 확인해보자!\n\n\n1. 연결 (CONNECT)\n\n{@html String.raw`\n# 기존 연결\nfrom elasticsearch import Elasticsearch\n\n# 코디네이터 노드와 연결\nES_HOSTS = [\"http://localhost:9200\"]\nES_CLIENT = Elasticsearch(ES_HOSTS)\nES_CLIENT = Elasticsearch(ES_HOSTS, timeout=30) # connection timeout 설정`}\n\n{@html String.raw`\n# elasticsearch dsl 연결\nfrom elasticsearch_dsl import connections\n# port 를 명시해야함.\nES_HOSTS = [\"http://localhost:9200\"]\nES_HOSTS_DEV = [\"http://localhost:9200\"]\nES_HOSTS_STAGE = [\"http://localhost:9200\"]\nES_HOSTS_PROD = [\"http://localhost:9200\"]\n  \n# 연결 . Search에서 사용.(2,3 확인)  \n\nconnections.create_connection(hosts=ES_HOSTS, alias=\"local\")\n# timeout 설정  \n  \nconnections.create_connection(hosts=ES_HOSTS, timeout=60 * 60 * 1, alias=\"local\")\n\n# alias 를 명시할 시 dev/stage/prod를 구분할 수 있음.  \n  \nconnections.create_connection(hosts=ES_HOSTS_DEV, timeout=60 * 60 * 1, alias=\"dev\")\nconnections.create_connection(hosts=ES_HOSTS_STAGE, timeout=60 * 60 * 1, alias=\"dev\")\nconnections.create_connection(hosts=ES_HOSTS_PROD, timeout=60 * 60 * 1, alias=\"prod\")\n\n# sniff_on_start 를 사용하면 lazy connect가 가능  \n  \nconnections.create_connection(hosts=ES_HOSTS, timeout=60 * 60 * 1, alias=\"local\", sniff_on_start=False)`}\n\n\n2. 색인 (INDEX)\n\n{@html String.raw`\n#기존  \n# index, mapping 생성  \n# 기존. helpers 사용  \nfrom elasticsearch import Elasticsearch, helpers\n\n# ... es 생성 생략  \n\nbulk_action_list = []\nproducts = [] # doc info [(doc_id, info)]\n\nfor doc_id, info in products:\n    # action 생성    \n    action = {\n        \"_op_type\": \"index\",\n        \"_index\": \"my_index\",\n        \"_id\": doc_id,\n        \"_source\": info, # op_type이 update일 경우 \"doc\"으로 변경     \n        }\n    bulk_action_list.append(action)\n# 색인\n\n_res = helpers.bulk(\n    ES_CLIENT,\n    bulk_action_list,\n    raise_on_error=False,\n    chunk_size=config.chunk_size\n)\n# 색인시 chunk 단위로 분할하여 색인  \n\nCHUNK_SIZE = 100\n\n_res = helpers.bulk(\n    ES_CLIENT,\n    bulk_action_list,\n)\n# 색인시 chunk 단위로 분할하여 색인, response 결과 간소화.  \n# helpers lib 단에서 결과를 간소화함. es응답을 완전 간소화하는 방법은 es색인 최적화 포스트를 확인하기 바람(추후 업로드 예정)  \n\nCHUNK_SIZE = 100\n_res = helpers.bulk(\n    ES_CLIENT,\n    bulk_action_list,\n    stats_only=True,\n)\n# 색인시 chunk 단위로 분할하여 색인 , error 무시  \n\nCHUNK_SIZE = 100  \n_res = helpers.bulk(\n    ES_CLIENT,\n    bulk_action_list,\n    chunk_size=CHUNK_SIZE\n)\n\n# 색인시 chunk 단위로 분할하여 색인 , error 무시 , 색인과 동시에 index refresh  \n\nCHUNK_SIZE = 100\n_res = helpers.bulk(\n    ES_CLIENT,\n    bulk_action_list,\n    raise_on_error=False,\n    chunk_size=CHUNK_SIZE,\n    refresh=True,\n)\n# 색인시 chunk 단위로 분할하여 색인 , error 무시 , 색인과 동시에 index refresh , 재시도 횟수 지정  \nCHUNK_SIZE = 100  \nMAX_RETRIES = 3  \n_res = helpers.bulk(\n    ES_CLIENT,\n    bulk_action_list,\n    raise_on_error=False,\n    chunk_size=CHUNK_SIZE,\n    refresh=True,\n    max_retries=MAX_RETRIES,\n)`}\n\n{@html String.raw`\n# elasticsearch_dsl\n# index , mapping 설정\nfrom elasticsearch_dsl import Index\nsettings = {} # setting 설정  \n# es document model 생성  \n# https://elasticsearch-dsl.readthedocs.io/en/latest/api.html#elasticsearch_dsl.Index.document   \n\nfrom elasticsearch_dsl import (\n    Boolean,\n    Date,\n    DenseVector,\n    Document,\n    HalfFloat,\n    Index,\n    Integer,\n    Keyword,\n    Long,\n    Nested,\n    Text,\n)\n\n# 어노테이션으로 index의 mapping 선언  \n\n@my_index.document  \nclass EsDocument(Document):\n    keyword_field = Keyword()\n    text_field = Text()\n    integer_field = Integer()\n    boolean_field = Boolean()\n    \n    \n# class는 내부에 선언할 수 있음.  \n\nclass EsDocument(Document):\n    title = Text()\n    author = Keyword()\n    content = Text()\n    published_at = Date()\n    class Index:\n        name = 'my_index'        \n        settings = {\n            \"number_of_shards\": 1,\n            \"number_of_replicas\": 0        \n            }  \n            \nindex_name = \"my_index\"  \nes_url = \"http://localhost:9200\"  \n\n#request 이용.  \n\ndef generate_index(es_url: str, index_name: str) -> None:\n    # load mappings     \n    _index = Index(index_name)  \n    _index.settings(**settings)\n    _index.document(EsDocument)\n    mappings = _index.to_dict()\n    try:\n        res = requests.put(es_url, json=mappings)\n        if res.status_code != 200:\n            raise Exception(res.json())\n        logger.info(\"Index is created\")\n    except Exception as e:\n        logger.error(e)\n        raise e\n    finally:\n        logger.info(\"FINISH\")\n        \n        \ngenerate_index(es_url, index_name)  \n# dsl 이용.  \nmy_index = Index('my_index')  \nmy_index.settings(**settings)\nmy_index.create()\nmy_index.save()\n  \n# 색인  \n  \n# # bulk의 경우 helpers를 그대로 이용.   \n\nfrom elasticsearch import Elasticsearch, helpers  \nproducts = [EsDocument()] # EsDocument를 가지고 info 생성  \n\nbulk_action_list = [\n    {\n        \"_op_type\": \"index\",\n        \"_index\": doc.Index.name,\n        \"_id\": doc.meta.id,\n        \"_source\": doc.to_dict(include_meta=False)\n    }\n    for doc in products\n]\n# ... 이후 동일`}",
      "content_html": "<p><ImgZoom src=\"/es-dsl-tutorial-connection-index/0_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<h1 id=\"elasticsearch-dsl-1\"><a href=\"#elasticsearch-dsl-1\">elasticsearch dsl 사용 예제 - 1편 - 연결과 색인</a></h1>\n<p>elasticsearch dsl을 통해서 elasticsearch를 사용해보려한다.</p>\n<p>기존 사용방법들도 함께 첨부하면서 어떤점이 달라지는지 확인해보자!  </p>\n<h2 id=\"1-connect\"><a href=\"#1-connect\">1. 연결 (connect)</a></h2>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-python\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 기존 연결</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> elasticsearch <span class=\"token keyword\">import</span> Elasticsearch</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 코디네이터 노드와 연결</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ES_HOSTS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:9200\"</span><span class=\"token punctuation\">]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ES_CLIENT <span class=\"token operator\">=</span> Elasticsearch<span class=\"token punctuation\">(</span>ES_HOSTS<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ES_CLIENT <span class=\"token operator\">=</span> Elasticsearch<span class=\"token punctuation\">(</span>ES_HOSTS<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># connection timeout 설정</span></div></div>`}</code></pre></CodeCopy></div>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-python\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># elasticsearch dsl 연결</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> elasticsearch_dsl <span class=\"token keyword\">import</span> connections</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># port 를 명시해야함.</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ES_HOSTS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:9200\"</span><span class=\"token punctuation\">]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ES_HOSTS_DEV <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:9200\"</span><span class=\"token punctuation\">]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ES_HOSTS_STAGE <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:9200\"</span><span class=\"token punctuation\">]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ES_HOSTS_PROD <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:9200\"</span><span class=\"token punctuation\">]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 연결 . Search에서 사용.(2,3 확인)  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">connections<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span>ES_HOSTS<span class=\"token punctuation\">,</span> alias<span class=\"token operator\">=</span><span class=\"token string\">\"local\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># timeout 설정  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">connections<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span>ES_HOSTS<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> alias<span class=\"token operator\">=</span><span class=\"token string\">\"local\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># alias 를 명시할 시 dev/stage/prod를 구분할 수 있음.  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">connections<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span>ES_HOSTS_DEV<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> alias<span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">connections<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span>ES_HOSTS_STAGE<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> alias<span class=\"token operator\">=</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">connections<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span>ES_HOSTS_PROD<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> alias<span class=\"token operator\">=</span><span class=\"token string\">\"prod\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># sniff_on_start 를 사용하면 lazy connect가 가능  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">connections<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>hosts<span class=\"token operator\">=</span>ES_HOSTS<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> alias<span class=\"token operator\">=</span><span class=\"token string\">\"local\"</span><span class=\"token punctuation\">,</span> sniff_on_start<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"2-index\"><a href=\"#2-index\">2. 색인 (index)</a></h2>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-python\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">#기존  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># index, mapping 생성  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 기존. helpers 사용  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> elasticsearch <span class=\"token keyword\">import</span> Elasticsearch<span class=\"token punctuation\">,</span> helpers</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># ... es 생성 생략  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">bulk_action_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">products <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># doc info [(doc_id, info)]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">for</span> doc_id<span class=\"token punctuation\">,</span> info <span class=\"token keyword\">in</span> products<span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token comment\"># action 생성    </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    action <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_op_type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"index\"</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_index\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"my_index\"</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">:</span> doc_id<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_source\"</span><span class=\"token punctuation\">:</span> info<span class=\"token punctuation\">,</span> <span class=\"token comment\"># op_type이 update일 경우 \"doc\"으로 변경     </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token punctuation\">}</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    bulk_action_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 색인</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">_res <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">.</span>bulk<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    ES_CLIENT<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    bulk_action_list<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    raise_on_error<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    chunk_size<span class=\"token operator\">=</span>config<span class=\"token punctuation\">.</span>chunk_size</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 색인시 chunk 단위로 분할하여 색인  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">CHUNK_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">100</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">_res <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">.</span>bulk<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    ES_CLIENT<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    bulk_action_list<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 색인시 chunk 단위로 분할하여 색인, response 결과 간소화.  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># helpers lib 단에서 결과를 간소화함. es응답을 완전 간소화하는 방법은 es색인 최적화 포스트를 확인하기 바람(추후 업로드 예정)  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">CHUNK_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">100</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">_res <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">.</span>bulk<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    ES_CLIENT<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    bulk_action_list<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    stats_only<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 색인시 chunk 단위로 분할하여 색인 , error 무시  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">CHUNK_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">_res <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">.</span>bulk<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    ES_CLIENT<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    bulk_action_list<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    chunk_size<span class=\"token operator\">=</span>CHUNK_SIZE</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 색인시 chunk 단위로 분할하여 색인 , error 무시 , 색인과 동시에 index refresh  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">CHUNK_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">100</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">_res <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">.</span>bulk<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    ES_CLIENT<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    bulk_action_list<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    raise_on_error<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    chunk_size<span class=\"token operator\">=</span>CHUNK_SIZE<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    refresh<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 색인시 chunk 단위로 분할하여 색인 , error 무시 , 색인과 동시에 index refresh , 재시도 횟수 지정  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">CHUNK_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">100</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">MAX_RETRIES <span class=\"token operator\">=</span> <span class=\"token number\">3</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">_res <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">.</span>bulk<span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    ES_CLIENT<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    bulk_action_list<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    raise_on_error<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    chunk_size<span class=\"token operator\">=</span>CHUNK_SIZE<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    refresh<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    max_retries<span class=\"token operator\">=</span>MAX_RETRIES<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">)</span></div></div>`}</code></pre></CodeCopy></div>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-python\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># elasticsearch_dsl</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># index , mapping 설정</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> elasticsearch_dsl <span class=\"token keyword\">import</span> Index</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">settings <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\"># setting 설정  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># es document model 생성  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># https://elasticsearch-dsl.readthedocs.io/en/latest/api.html#elasticsearch_dsl.Index.document   </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> elasticsearch_dsl <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Boolean<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Date<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    DenseVector<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Document<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    HalfFloat<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Index<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Integer<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Keyword<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Long<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Nested<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    Text<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 어노테이션으로 index의 mapping 선언  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token decorator annotation punctuation\">@my_index<span class=\"token punctuation\">.</span>document</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">EsDocument</span><span class=\"token punctuation\">(</span>Document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    keyword_field <span class=\"token operator\">=</span> Keyword<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    text_field <span class=\"token operator\">=</span> Text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    integer_field <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    boolean_field <span class=\"token operator\">=</span> Boolean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># class는 내부에 선언할 수 있음.  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">EsDocument</span><span class=\"token punctuation\">(</span>Document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    title <span class=\"token operator\">=</span> Text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    author <span class=\"token operator\">=</span> Keyword<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    content <span class=\"token operator\">=</span> Text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    published_at <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Index</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        name <span class=\"token operator\">=</span> <span class=\"token string\">'my_index'</span>        </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        settings <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            <span class=\"token string\">\"number_of_shards\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            <span class=\"token string\">\"number_of_replicas\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>        </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            <span class=\"token punctuation\">}</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">index_name <span class=\"token operator\">=</span> <span class=\"token string\">\"my_index\"</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">es_url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://localhost:9200\"</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\">#request 이용.  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">def</span> <span class=\"token function\">generate_index</span><span class=\"token punctuation\">(</span>es_url<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> index_name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token comment\"># load mappings     </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    _index <span class=\"token operator\">=</span> Index<span class=\"token punctuation\">(</span>index_name<span class=\"token punctuation\">)</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    _index<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>settings<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    _index<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">(</span>EsDocument<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    mappings <span class=\"token operator\">=</span> _index<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span>es_url<span class=\"token punctuation\">,</span> json<span class=\"token operator\">=</span>mappings<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">!=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">            <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"Index is created\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token keyword\">raise</span> e</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"FINISH\"</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">generate_index<span class=\"token punctuation\">(</span>es_url<span class=\"token punctuation\">,</span> index_name<span class=\"token punctuation\">)</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># dsl 이용.  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">my_index <span class=\"token operator\">=</span> Index<span class=\"token punctuation\">(</span><span class=\"token string\">'my_index'</span><span class=\"token punctuation\">)</span>  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">my_index<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>settings<span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">my_index<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">my_index<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># 색인  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># # bulk의 경우 helpers를 그대로 이용.   </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">from</span> elasticsearch <span class=\"token keyword\">import</span> Elasticsearch<span class=\"token punctuation\">,</span> helpers  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">products <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>EsDocument<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># EsDocument를 가지고 info 생성  </span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">bulk_action_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">{</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_op_type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"index\"</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_index\"</span><span class=\"token punctuation\">:</span> doc<span class=\"token punctuation\">.</span>Index<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">:</span> doc<span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">        <span class=\"token string\">\"_source\"</span><span class=\"token punctuation\">:</span> doc<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span>include_meta<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token punctuation\">}</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">for</span> doc <span class=\"token keyword\">in</span> products</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token punctuation\">]</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token comment\"># ... 이후 동일</span></div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "elasticsearch",
        "tutorial",
        "python",
        "elasticsearch-dsl",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "setting-ssh-file-permission",
      "url": "https://naya-an-tech.github.io/setting-ssh-file-permission",
      "title": "ssh 수동복사 권한 설정",
      "date_published": "2024-06-03T13:59:18.748Z",
      "date_modified": "2024-06-03T13:59:18.750Z",
      "content_text": "SSH KEY 수동 복사 권한 설정\n\n가끔 서버접속 key들을 파일로 받을 때가 있다. (이런경우가 최대한 없길바란다…ㅎㅎ)\n\n디렉토리와 키파일의 권한이 적절하지않을 때 아래의 방법을 따라한다.\n\n 1. .ssh\n 2. 개인키(id_ed25519) 파일 권한 변경:\n 3. 공개키(id_ed25519.pub) 파일 권한 변경:\n\n권한 변경 후에는 다음과 같이 확인할 수 있다.\n\n{@html String.raw`\nls -l /home/user/.ssh`}\n\n출력 결과:\n\n{@html String.raw`\ntotal 8\n-rw------- 1 user user 411 May 14 13:53 id_ed25519\n-rw-r--r-- 1 user user  98 May 14 13:53 id_ed25519.pub`}\n\n이제 .ssh 디렉터리와 키 파일의 권한이 적절하게 설정되다. SSH 연결 시 개인키 파일의 권한이 너무 열려있으면 보안 위험이 있으므로\n주의해야 한다.\n\n\n등록\n\n그래도 key가 작동하지않으면 ssh key를 등록해주자.\n\n{@html String.raw`\neval \"$(ssh-agent -s)\"\nssh-add ~/.ssh/id_ed25519`}",
      "content_html": "<h1 id=\"ssh-key\"><a href=\"#ssh-key\">SSH key 수동 복사 권한 설정</a></h1>\n<p>가끔 서버접속 key들을 파일로 받을 때가 있다. (이런경우가 최대한 없길바란다…ㅎㅎ)</p>\n<p>디렉토리와 키파일의 권한이 적절하지않을 때 아래의 방법을 따라한다.</p>\n<ol>\n<li>.ssh</li>\n<li>개인키(id_ed25519) 파일 권한 변경:</li>\n<li>공개키(id_ed25519.pub) 파일 권한 변경:</li>\n</ol>\n<p>권한 변경 후에는 다음과 같이 확인할 수 있다.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-shell\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /home/user/.ssh</div></div>`}</code></pre></CodeCopy></div>\n<p>출력 결과:</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-shell\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">total <span class=\"token number\">8</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">-rw------- <span class=\"token number\">1</span> user user <span class=\"token number\">411</span> May <span class=\"token number\">14</span> <span class=\"token number\">13</span>:53 id_ed25519</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">-rw-r--r-- <span class=\"token number\">1</span> user user  <span class=\"token number\">98</span> May <span class=\"token number\">14</span> <span class=\"token number\">13</span>:53 id_ed25519.pub</div></div>`}</code></pre></CodeCopy></div>\n<p>이제 .ssh 디렉터리와 키 파일의 권한이 적절하게 설정되다. SSH 연결 시 개인키 파일의 권한이 너무 열려있으면 보안 위험이 있으므로 주의해야 한다.</p>\n<h1 id=\"\"><a href=\"#\">등록</a></h1>\n<p>그래도 key가 작동하지않으면 ssh key를 등록해주자.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-shell\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">&#36;(</span>ssh-agent <span class=\"token parameter variable\">-s</span><span class=\"token variable\">)</span></span>\"</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">ssh-add ~/.ssh/id_ed25519</div></div>`}</code></pre></CodeCopy></div>\n",
      "tags": [
        "ubuntu",
        "mac",
        "ssh",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "how-to-set-giscus-to-github-page",
      "url": "https://naya-an-tech.github.io/how-to-set-giscus-to-github-page",
      "title": "giscus 댓글 기능",
      "summary": "giscus를 활용핫 댓글 기능 만들기",
      "date_published": "2024-05-10T19:07:05.353Z",
      "date_modified": "2024-05-11T15:39:33.174Z",
      "tags": [
        "blog",
        "free-comment",
        "giscus",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "dependency-code-deploy-automation-with-gpt",
      "url": "https://naya-an-tech.github.io/dependency-code-deploy-automation-with-gpt",
      "title": "GPT와 함께 찾아본 디팬던시 코드 배포 자동화",
      "date_published": "2024-05-10T19:07:05.353Z",
      "date_modified": "2024-05-11T15:39:33.174Z",
      "content_text": "상황\n\n현재 모노 레포를 운영 중에 많은 코드들과 test코드로 인해 빌드 시간이 점점 길어지고있다.\n\n해당 서비스 배포 전, 관련된 코드들이 무엇인지 찾고 그 코드들의 test code만 실행하여 빌드시간을 단축시켜보려고 한다.\n\nGPT에게 질문해보고 관련 답변으로 다시 한번 생각해보자!\n\n\nGPT에게 질문\n\n\n우리의 상황을 먼저 설명하자\n\n{@html String.raw`\n우리는 파이썬으로, 모노레포를 추구하고있어. \n여기에는 약 50개의 project와 각각의 프로젝트에 api, daemon worker(with kafka), batch worker 가 5~10개씩,  \nMSA 형태로 약 400개의 프로세스가 운영되고있는 서비스를 관리하고있어.\n또 배포를 위한 k8s manifest, 즉, deployment yaml이 있고, \n각 yaml에는 최종적으로 실행시키는 command가 항상 있어.\n\n이 커멘드를 활용하여,\n역으로 해당 deployment가 어떠한 코드들과 연관되어있는지를 추적하고, \n모노레포에서 특정 파이썬 코드가 추가/삭제/변경됨에 따라, \n어떠한 deployment를 업데이트 해야하는지를 알 수 있는 도구를 만들려고 해.\n\n혹은 이미 도구가 있다면 추천도 좋아.\n\n어떻게 해당문제를 접근하면 좋을까?`}\n\n\nGPT 답변\n\nChatGPT\n\n모노레포에서 여러 프로젝트를 관리하면서, 특정 파이썬 코드의 변경에 따라 영향을 받는 서비스(또는 deployment)를 식별하는 것은 효율적인\nCI/CD 파이프라인을 구축하는 데 있어 중요한 부분입니다. 여기에는 몇 가지 접근 방법이 있습니다:\n\n 1. 코드 기반의 의존성 추적\n 2. Deployment YAML과의 매핑\n 3. 변경 감지 자동화\n 4. 도구 활용\n 5. 사용자 정의 도구 개발 이러한 접근 방법을 통해, 코드 변경이 있을 때 필요한 서비스만 선택적으로 배포함으로써, 리소스를 절약하고 배포\n    시간을 단축할 수 있습니다. 여러분의 시스템과 프로세스에 가장 적합한 방법을 선택하고 필요에 따라 조정하여 적용하는 것이 중요합니다.\n\n\n다시 질문하자. 코드 디펜던시를 찾는 도구 추천.\n\n 1. ./projects/projectA/src/main.py 를 읽어 import문을 기반으로 연관된 모든 파일들의 목록을 찾는 도구를 개발\n    또는 이미 있는 도구를 추천해줘.\n\nChatGPT\n\n파이썬 파일에서 import 문을 기반으로 연관된 모든 파일을 찾는 작업은 의존성 분석에 해당합니다. 이를 수행할 수 있는 몇 가지 방법과\n도구를 소개합니다:\n\n 1. Python 스크립트 사용\n 2. Pydeps\n 3. Snakefood\n 4. Modulegraph 이 중에서 가장 적합한 도구나 방법을 선택하여 사용하면, 주어진 Python 파일과 연관된 모든 파일들의 목록을\n    효과적으로 찾을 수 있을 것입니다. 만약 자세한 구현 방법이나 사용 방법에 대해 더 알고 싶다면, 추가로 질문해 주세요.\n\n위 답변을 참고해서 모노 레포에서 효율적인 테스트 코드를 실행시키도록 개선해보자!",
      "content_html": "<h1 id=\"\"><a href=\"#\">상황</a></h1>\n<p>현재 모노 레포를 운영 중에 많은 코드들과 test코드로 인해 빌드 시간이 점점 길어지고있다.</p>\n<p>해당 서비스 배포 전, 관련된 코드들이 무엇인지 찾고 그 코드들의 test code만 실행하여 빌드시간을 단축시켜보려고 한다.</p>\n<p>GPT에게 질문해보고 관련 답변으로 다시 한번 생각해보자!</p>\n<h1 id=\"gpt\"><a href=\"#gpt\">GPT에게 질문</a></h1>\n<h2 id=\"\"><a href=\"#\">우리의 상황을 먼저 설명하자</a></h2>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-bash\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">우리는 파이썬으로, 모노레포를 추구하고있어. </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">여기에는 약 <span class=\"token number\">50</span>개의 project와 각각의 프로젝트에 api, daemon worker<span class=\"token punctuation\">(</span>with kafka<span class=\"token punctuation\">)</span>, batch worker 가 <span class=\"token number\">5</span>~10개씩,  </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">MSA 형태로 약 <span class=\"token number\">400</span>개의 프로세스가 운영되고있는 서비스를 관리하고있어.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">또 배포를 위한 k8s manifest, 즉, deployment yaml이 있고, </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">각 yaml에는 최종적으로 실행시키는 command가 항상 있어.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">이 커멘드를 활용하여,</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">역으로 해당 deployment가 어떠한 코드들과 연관되어있는지를 추적하고, </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">모노레포에서 특정 파이썬 코드가 추가/삭제/변경됨에 따라, </div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">어떠한 deployment를 업데이트 해야하는지를 알 수 있는 도구를 만들려고 해.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">혹은 이미 도구가 있다면 추천도 좋아.</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">어떻게 해당문제를 접근하면 좋을까?</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"gpt\"><a href=\"#gpt\">GPT 답변</a></h2>\n<p>ChatGPT</p>\n<p>모노레포에서 여러 프로젝트를 관리하면서, 특정 파이썬 코드의 변경에 따라 영향을 받는 서비스(또는 deployment)를 식별하는 것은 효율적인 CI/CD 파이프라인을 구축하는 데 있어 중요한 부분입니다. 여기에는 몇 가지 접근 방법이 있습니다:</p>\n<ol>\n<li>코드 기반의 의존성 추적</li>\n<li>Deployment YAML과의 매핑</li>\n<li>변경 감지 자동화</li>\n<li>도구 활용</li>\n<li>사용자 정의 도구 개발\n이러한 접근 방법을 통해, 코드 변경이 있을 때 필요한 서비스만 선택적으로 배포함으로써, 리소스를 절약하고 배포 시간을 단축할 수 있습니다. 여러분의 시스템과 프로세스에 가장 적합한 방법을 선택하고 필요에 따라 조정하여 적용하는 것이 중요합니다.</li>\n</ol>\n<h2 id=\"\"><a href=\"#\">다시 질문하자. 코드 디펜던시를 찾는 도구 추천.</a></h2>\n<ol>\n<li>./projects/projectA/src/main.py 를 읽어 import문을 기반으로 연관된 모든 파일들의 목록을 찾는 도구를 개발 또는 이미 있는 도구를 추천해줘.</li>\n</ol>\n<p>ChatGPT</p>\n<p>파이썬 파일에서 import 문을 기반으로 연관된 모든 파일을 찾는 작업은 의존성 분석에 해당합니다. 이를 수행할 수 있는 몇 가지 방법과 도구를 소개합니다:</p>\n<ol>\n<li>Python 스크립트 사용</li>\n<li>Pydeps</li>\n<li>Snakefood</li>\n<li>Modulegraph\n이 중에서 가장 적합한 도구나 방법을 선택하여 사용하면, 주어진 Python 파일과 연관된 모든 파일들의 목록을 효과적으로 찾을 수 있을 것입니다. 만약 자세한 구현 방법이나 사용 방법에 대해 더 알고 싶다면, 추가로 질문해 주세요.</li>\n</ol>\n<p>위 답변을 참고해서 모노 레포에서 효율적인 테스트 코드를 실행시키도록 개선해보자!</p>\n",
      "tags": [
        "GPT",
        "cleancode",
        "code depandency",
        "CI/CD",
        "mono repo",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "vscode-not-found-git",
      "url": "https://naya-an-tech.github.io/vscode-not-found-git",
      "title": "[vscode] 등록된 소스제어 공급자가 없습니다.",
      "date_published": "2024-05-10T19:07:05.352Z",
      "date_modified": "2024-05-11T15:39:33.174Z",
      "content_text": "vscode 등록된 소스 제어 공급자가 없습니다.\n\n애러가 종종 나곤한다. 처음에는 왜 나는지 알 수가 없어 이것저것 찾아보았다.\n\n\n\nvscode에 git이 활성화되어있지 않을 때 발생하는 것으로 확인했다.\n\n확장 > GIT을 검색하여 해당 모듈을 “사용”으로 변경.\n\n\n\n@builtin git\n\n이제 커밋 변경사항이 잘 보인다.\n\n",
      "content_html": "<p>vscode 등록된 소스 제어 공급자가 없습니다. </p>\n<p>애러가 종종 나곤한다. 처음에는 왜 나는지 알 수가 없어 이것저것 찾아보았다.</p>\n<p><ImgZoom src=\"/vscode-not-found-git/0_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<p>vscode에 git이 활성화되어있지 않을 때 발생하는 것으로 확인했다.</p>\n<p>확장 &gt; GIT을 검색하여 해당 모듈을 “사용”으로 변경.</p>\n<p><ImgZoom src=\"/vscode-not-found-git/1_Untitled.png\" alt=\"image\"></ImgZoom></p>\n<p>@builtin git</p>\n<p>이제 커밋 변경사항이 잘 보인다.</p>\n<p><ImgZoom src=\"/vscode-not-found-git/2_Untitled.png\" alt=\"image\"></ImgZoom></p>\n",
      "tags": [
        "vscode",
        "git",
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "TIL",
      "url": "https://naya-an-tech.github.io/TIL",
      "date_published": "2024-05-10T19:07:05.352Z",
      "date_modified": "2024-05-11T15:39:33.173Z",
      "content_text": "TIL",
      "content_html": "<h1 id=\"til\"><a href=\"#til\">TIL</a></h1>\n",
      "tags": [
        "Year-2024",
        "Language-English"
      ]
    },
    {
      "id": "hello-QWER",
      "url": "https://naya-an-tech.github.io/hello-QWER",
      "title": "Hello QWER 👋",
      "summary": "🎉 Let's start a brand new awesome blog...",
      "image": "/hello-QWER/cover.jpg",
      "date_published": "2022-09-16T22:00:00.000+08:00",
      "date_modified": "2022-09-16T12:00:00.000+08:00",
      "content_text": "👋 HELLO WORLD\n\nHello Wêreld! Përshendetje Botë! ሰላም ልዑል! مرحبا بالعالم! Բարեւ աշխարհ! Kaixo\nMundua! Прывітанне Сусвет! ওহে বিশ্ব! Здравей свят! Hola món! Moni Dziko\nLapansi! 你好世界！ Pozdrav svijete! Ahoj světe! Hej Verden! Hallo Wereld! Hello\nWorld! Tere maailm! Hei maailma! Bonjour monde! Hallo wrâld! გამარჯობა მსოფლიო!\nHallo Welt! Γειά σου Κόσμε! Sannu Duniya! שלום עולם! नमस्ते दुनिया! Helló Világ!\nHalló heimur! Ndewo Ụwa! Halo Dunia! Ciao mondo! こんにちは世界！ Сәлем Әлем! សួស្តី\nពិភពលោក! Салам дүйнө! ສະ ບາຍ ດີ ຊາວ ໂລກ! Sveika pasaule! Labas pasauli! Moien\nWelt! Здраво свету! Hai dunia! ഹലോ വേൾഡ്! Сайн уу дэлхий! မင်္ဂလာပါကမ္ဘာလောက!\nनमस्कार संसार! Hei Verden! سلام نړی! سلام دنیا! Witaj świecie! Olá Mundo! ਸਤਿ\nਸ੍ਰੀ ਅਕਾਲ ਦੁਨਿਆ! Salut Lume! Привет мир! Hàlo a Shaoghail! Здраво Свете! Lefatše\nLumela! හෙලෝ වර්ල්ඩ්! Pozdravljen svet! ¡Hola Mundo! Halo Dunya! Salamu Dunia!\nHej världen! Салом Ҷаҳон! สวัสดีชาวโลก! Selam Dünya! Привіт Світ! Salom Dunyo!\nChào thế giới! Helo Byd! Molo Lizwe! העלא וועלט! Mo ki O Ile Aiye! Sawubona\nMhlaba!\nPhoto by Marc-Olivier Jodoin\n[https://unsplash.com/@marcojodoin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]\non Unsplash\n[https://unsplash.com/s/photos/reach?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]\n\n\n🚀 HELLO QWER\n\nThis site is generated by QWER, come and try it out.\n\n\nKWCHANG0831/SVELTE-QWER [https://github.com/kwchang0831/svelte-QWER]\n\n✒︎ Simply Awesome Blog Starter built with SvelteKit and Love ❤\n\n\n👋 HELLO WORLD FROM PYTHON\n\n\nEXAMPLE.PY\n\n{@html String.raw`\n1\nfor i in range(10):\n2\n    print('Hello, World #%s' % (i))`}\n\n\n👍 END\n\nWe look forward to see your creation.\n\nPhoto by Nicolas Gras\n[https://unsplash.com/@armgd?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]\non Unsplash\n[https://unsplash.com/s/photos/bokeh?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]",
      "content_html": "<h2 id=\"hello-world\"><a href=\"#hello-world\">👋 Hello World</a></h2>\n<div class=\"flex gap4 flex-wrap py4\">\n<span>Hello Wêreld!</span>\n<span>Përshendetje Botë!</span>\n<span>ሰላም ልዑል!</span>\n<span>مرحبا بالعالم!</span>\n<span>Բարեւ աշխարհ!</span>\n<span>Kaixo Mundua!</span>\n<span>Прывітанне Сусвет!</span>\n<span>ওহে বিশ্ব!</span>\n<span>Здравей свят!</span>\n<span>Hola món!</span>\n<span>Moni Dziko Lapansi!</span>\n<span>你好世界！</span>\n<span>Pozdrav svijete!</span>\n<span>Ahoj světe!</span>\n<span>Hej Verden!</span>\n<span>Hallo Wereld!</span>\n<span>Hello World!</span>\n<span>Tere maailm!</span>\n<span>Hei maailma!</span>\n<span>Bonjour monde!</span>\n<span>Hallo wrâld!</span>\n<span>გამარჯობა მსოფლიო!</span>\n<span>Hallo Welt!</span>\n<span>Γειά σου Κόσμε!</span>\n<span>Sannu Duniya!</span>\n<span>שלום עולם!</span>\n<span>नमस्ते दुनिया!</span>\n<span>Helló Világ!</span>\n<span>Halló heimur!</span>\n<span>Ndewo Ụwa!</span>\n<span>Halo Dunia!</span>\n<span>Ciao mondo!</span>\n<span>こんにちは世界！</span>\n<span>Сәлем Әлем!</span>\n<span>សួស្តី​ពិភពលោក!</span>\n<span>Салам дүйнө!</span>\n<span>ສະ​ບາຍ​ດີ​ຊາວ​ໂລກ!</span>\n<span>Sveika pasaule!</span>\n<span>Labas pasauli!</span>\n<span>Moien Welt!</span>\n<span>Здраво свету!</span>\n<span>Hai dunia!</span>\n<span>ഹലോ വേൾഡ്!</span>\n<span>Сайн уу дэлхий!</span>\n<span>မင်္ဂလာပါကမ္ဘာလောက!</span>\n<span>नमस्कार संसार!</span>\n<span>Hei Verden!</span>\n<span>سلام نړی!</span>\n<span>سلام دنیا!</span>\n<span>Witaj świecie!</span>\n<span>Olá Mundo!</span>\n<span>ਸਤਿ ਸ੍ਰੀ ਅਕਾਲ ਦੁਨਿਆ!</span>\n<span>Salut Lume!</span>\n<span>Привет мир!</span>\n<span>Hàlo a Shaoghail!</span>\n<span>Здраво Свете!</span>\n<span>Lefatše Lumela!</span>\n<span>හෙලෝ වර්ල්ඩ්!</span>\n<span>Pozdravljen svet!</span>\n<span>¡Hola Mundo!</span>\n<span>Halo Dunya!</span>\n<span>Salamu Dunia!</span>\n<span>Hej världen!</span>\n<span>Салом Ҷаҳон!</span>\n<span>สวัสดีชาวโลก!</span>\n<span>Selam Dünya!</span>\n<span>Привіт Світ!</span>\n<span>Salom Dunyo!</span>\n<span>Chào thế giới!</span>\n<span>Helo Byd!</span>\n<span>Molo Lizwe!</span>\n<span>העלא וועלט!</span>\n<span>Mo ki O Ile Aiye!</span>\n<span>Sawubona Mhlaba!</span>\n</div>\n\n<ImgZoom src=\"/hello-QWER/reach.jpg\" alt=\"/hello-QWER/reach.jpg\" class=\"h-full object-cover\">\nPhoto by <a href=\"https://unsplash.com/@marcojodoin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Marc-Olivier Jodoin</a> on <a href=\"https://unsplash.com/s/photos/reach?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n</ImgZoom>\n\n<h2 id=\"hello-qwer\"><a href=\"#hello-qwer\">🚀 Hello QWER</a></h2>\n<p>This site is generated by QWER, come and try it out.</p>\n<div class=\"my4 mx--8 sm:(mx0 rounded-2xl) flex gap4 items-center shadow-2xl bg-black/[0.25] px4 py6\">\n  <div>\n    <div class=\"i-carbon-logo-github w6 h6\"/>\n  </div>\n  <div>\n    <h2 class=\"!p0 !m0 !text-[1rem] sm:!text-[1.25rem] !font-700 underline\"><a href=\"https://github.com/kwchang0831/svelte-QWER\">kwchang0831/svelte-QWER</a></h2>\n    <p class=\"!p0 !m0 !text-[0.6rem] sm:!text-[0.8rem]\">✒︎ Simply Awesome Blog Starter built with SvelteKit and Love ❤</p>\n  </div>\n</div>\n\n<h2 id=\"hello-world-from-python\"><a href=\"#hello-world-from-python\">👋 Hello World from Python</a></h2>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">example.py</h2><CodeCopy><pre><code class=\"language-python\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello, World #%s'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"end\"><a href=\"#end\">👍 END</a></h2>\n<p>We look forward to see your creation.</p>\n<ImgZoom src=\"/hello-QWER/wait.jpg\" alt=\"/hello-QWER/wait.jpg\" class=\"h-full object-cover\">\nPhoto by <a href=\"https://unsplash.com/@armgd?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Nicolas Gras</a> on <a href=\"https://unsplash.com/s/photos/bokeh?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n</ImgZoom>\n",
      "tags": [
        "Hello World",
        "QWER",
        "Year-2022",
        "Language-English"
      ]
    },
    {
      "id": "example",
      "url": "https://naya-an-tech.github.io/example",
      "title": "Example Post",
      "summary": "📝 Showcase basic syntax of Markdown and HTML",
      "image": "/example/cover.jpg",
      "date_published": "2022-08-09T00:00:00.000+08:00",
      "date_modified": "2023-05-01T20:00:00.000+08:00",
      "content_text": "PARAGRAPHS\n\nLorem Ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut labore et dolore magna aliqua. This is the content: The quick\nbrown fox [https://www.foxnews.com/] jumps over the lazy dog.\n\nThis is Spoiler Text.\n\n> Lorem ipsum began as scrambled, nonsensical Latin derived from Cicero's\n> 1st-century BC text De Finibus Bonorum et Malorum.\n\n↑ ↑ ↓ ↓ ← → ← → B A Start\n\nCtl + C Ctl + V\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut labore et dolore magna aliqua.\n\n\nORDERED LIST\n\n 1. First item\n 2. Second item\n 3. Third item\n\n\nUNORDERED LIST\n\n * First item\n * Second item\n * Third item\n\n\nCHECKBOX LIST (UL)\n\n * List Item 1 unchecked\n * List Item 2 checked\n * List Item 3 checked\n\n\nKATEX\n\n\nKATEX BLOCK\n\nKatex Block are facanced by\n\n{@html String.raw`\n```math\nTex Syntax\n````}\n\nExample of Fractions and Binomials\n\n{@html String.raw`n!k!(n−k)!=(nk)\\frac{n!}{k!(n-k)!} = \\binom{n}{k}k!(n−k)!n!\n=(kn )`}\n\nAlso\n\n{@html String.raw`1x+1yy−z\\frac{\\frac{1}{x}+\\frac{1}{y}}{y-z}y−zx1 +y1 `}\n\n\nKATEX INLINE\n\nKatex inline are facanced by\n\n{@html String.raw`\n`$kaTex Inline Text$``}\n\nThis n22n^{22}n22 and that cos⁡(2θ)=cos⁡2θ−sin⁡2θ\\cos (2\\theta) = \\cos^2 \\theta\n- \\sin^2 \\thetacos(2θ)=cos2θ−sin2θ\n\n\nCHEMICAL TYPESETTING\n\n{@html\nString.raw`ZnX2+⇌+2 HX++2 OHX−Zn(OH)X2↓amphoteres Hydroxid⇌+2 HX++2 OHX−[Zn(OH)X4]X2−Hydroxozikat\\ce{Zn^2+\n<=>[+ 2OH-][+ 2H+] $\\underset{\\text{amphoteres Hydroxid}}{\\ce{Zn(OH)2 v}}$ <=>[+\n2OH-][+ 2H+]\n$\\underset{\\text{Hydroxozikat}}{\\ce{[Zn(OH)4]^2-}}$}ZnX2++2OHX−+2HX+\namphoteres HydroxidZn(OH)X2 ↓ +2OHX−+2HX+ Hydroxozikat[Zn(OH)X4 ]X2− `}\n\n\nFOOTNOTES\n\nHere's a simple footnote,1 and here's a longer one.2\n\n\nINFO BLOCK\n\nThis is the content: The quick brown fox [https://www.foxnews.com/] jumps over\nthe lazy dog.\n\n\nTABLE\n\nTable Header 1 Table Header 2 Table Header 3 Division 1 Division 2 Division 3\nDivision 1 Division 2 Division 3 Division 1 Division 2 Division 3\n\nAlign Left Align Center Align Right Division 1 Division 2 Division 3 Division 1\nDivision 2 Division 3 Division 1 Division 2 Division 3\n\n\nCODE BLOCK\n\n\nEXAMPLES/INDEX.TS\n\n{@html String.raw`\nfor (let x in [0]) console.log(x);`}\n\n\nTYPESCRIPT-HELLOWORLD.TS\n\n{@html String.raw`\n1 \nclass Greeter {\n2 \n    constructor(public greeting: string) { }\n3 \n    greet() {\n4 \n        return \"<h1>\" + this.greeting + \"</h1>\";\n5 \n    }\n6 \n};\n7 \n\n8+\nvar greeter = new Greeter(\"Hello, Ministry of Programming!\");\n9+\nvar str = greeter.greet();\n10-\nconsole.log(\"Test\");`}\n\n\nIMAGE\n\nJust image\n\n\n\nImage with subtitle\n\nPhoto by Ioana Tabarcea\n[https://unsplash.com/@willy24?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]\non Unsplash\n[https://unsplash.com/s/photos/morning?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText]\n\nShared image from /user/assets/shared/\n\n{@html String.raw`\n![github-mark-svg](/shared/github-mark.svg)`}\n\n\n\n\nVIDEOS / GIF\n\n\n\n\nYOUTUBE\n\n\nCUSTOM SVELTE COMPONENT\n\n\n\n\n{@html String.raw`\n<script lang=\"ts\">\n  const const_variable = 999;\n</script>\n\nVariable is {const_variable}`}\n\nVariable is {const_variable}\n\n{@html String.raw`\n{(function () {\nconst guess = Math.random()\n\nif (guess > 0.66) {\nreturn `<span style=\"color: tomato\">Look at us.</span>`\n}\n\nif (guess > 0.33) {\nreturn `<span style=\"color: violet\">Who would have guessed?!</span>`\n}\n\nreturn `<span style=\"color: goldenrod\">Not me.</span>`\n})()}`}\n\n{@html (function () { const guess = Math.random() if (guess > 0.66) { return\n`Look at us.` } if (guess > 0.33) { return `Who would have guessed?!` } return\n`Not me.` })()}\n\n\n👍 END\n\n--------------------------------------------------------------------------------\n\n 1. This is the first footnote.\n    \n    ↩\n\n 2. Here's one with multiple paragraphs and code.\n    Indent paragraphs to include them in the footnote.\n    { my code }\n    Add as many paragraphs as you like.\n    \n    ↩",
      "content_html": "<h2 id=\"paragraphs\"><a href=\"#paragraphs\">Paragraphs</a></h2>\n<p><strong>Lorem Ipsum</strong> dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. This is the content: <strong><em>The</em></strong> <em>quick</em> <u>brown</u> <a href=\"https://www.foxnews.com/\" rel=\"external\" >fox</a> <code class=\"inline-code-block\">jumps</code> <del>over</del> the lazy <strong>dog</strong>.</p>\n<p>This is <span class=\"spoiler\">Spoiler Text</span>.</p>\n<blockquote>\n<p>Lorem ipsum began as scrambled, nonsensical Latin derived from Cicero&#39;s 1st-century BC text De Finibus Bonorum et Malorum.</p>\n</blockquote>\n<p><kbd>↑</kbd> <kbd>↑</kbd> <kbd>↓</kbd> <kbd>↓</kbd> <kbd>←</kbd> <kbd>→</kbd> <kbd>←</kbd> <kbd>→</kbd> <kbd>B</kbd> <kbd>A</kbd> <kbd>Start</kbd></p>\n<p><kbd>Ctl + C</kbd> <kbd>Ctl + V</kbd></p>\n<p><sup>Lorem</sup> <sub>ipsum</sub> <cite>dolor sit amet</cite>, <acronym title=\"Consectetur Adipiscing Elit\">consectetur adipiscing elit</acronym>, <abbr title=\"Aliqua\">sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</abbr>.</p>\n<h3 id=\"ordered-list\"><a href=\"#ordered-list\">Ordered List</a></h3>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n</ol>\n<h3 id=\"unordered-list\"><a href=\"#unordered-list\">Unordered List</a></h3>\n<ul>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n</ul>\n<h3 id=\"checkbox-list-ul\"><a href=\"#checkbox-list-ul\">Checkbox List (ul)</a></h3>\n<ul>\n<li><input type=\"checkbox\" > List Item 1 unchecked</li>\n<li><input type=\"checkbox\" checked> List Item 2 checked</li>\n<li><input type=\"checkbox\" checked> List Item 3 checked</li>\n</ul>\n<h2 id=\"katex\"><a href=\"#katex\">Katex</a></h2>\n<h3 id=\"katex-block\"><a href=\"#katex-block\">Katex Block</a></h3>\n<p>Katex Block are facanced by</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-text\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#96;&#96;&#96;math</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">Tex Syntax</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#96;&#96;&#96;</div></div>`}</code></pre></CodeCopy></div>\n<p>Example of Fractions and Binomials</p>\n<p class=\"katex-block\">{@html String.raw`<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><mrow><mi>k</mi><mo stretchy=\"false\">!</mo><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>=</mo><mrow><mo fence=\"true\">(</mo><mfrac linethickness=\"0px\"><mi>n</mi><mi>k</mi></mfrac><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\frac{n!}{k!(n-k)!} = \\binom{n}{k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.3074em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">!</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)!</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mclose\">!</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"mord\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1076em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span></span></span></span></span>`}</p><p>Also</p>\n<p class=\"katex-block\">{@html String.raw`<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mfrac><mn>1</mn><mi>x</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><mi>y</mi></mfrac></mrow><mrow><mi>y</mi><mo>−</mo><mi>z</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\frac{1}{x}+\\frac{1}{y}}{y-z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.5967em;vertical-align:-0.8804em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7162em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.8711em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4811em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>`}</p><h3 id=\"katex-inline\"><a href=\"#katex-inline\">Katex Inline</a></h3>\n<p>Katex inline are facanced by</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-text\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">&#96;&#36;kaTex Inline Text&#36;&#96;</div></div>`}</code></pre></CodeCopy></div>\n<p>This <span class=\"katex-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>22</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^{22}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">22</span></span></span></span></span></span></span></span></span></span></span></span></span> and that <span class=\"katex-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>cos</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mi>θ</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mrow><mi>cos</mi><mo>⁡</mo></mrow><mn>2</mn></msup><mi>θ</mi><mo>−</mo><msup><mrow><mi>sin</mi><mo>⁡</mo></mrow><mn>2</mn></msup><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\cos (2\\theta) = \\cos^2 \\theta - \\sin^2 \\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">cos</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mop\"><span class=\"mop\">cos</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8719em;\"></span><span class=\"mop\"><span class=\"mop\">sin</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8719em;\"><span style=\"top:-3.1208em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></span></p>\n<h3 id=\"chemical-typesetting\"><a href=\"#chemical-typesetting\">Chemical Typesetting</a></h3>\n<p class=\"katex-block\">{@html String.raw`<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mi mathvariant=\"normal\">Z</mi><mi mathvariant=\"normal\">n</mi></mrow><msup><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mrow><mn>2</mn><mo>+</mo></mrow></msup><munderover><mo stretchy=\"true\" minsize=\"3.0em\">⇌</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mrow></mrow><mo>+</mo><mrow></mrow><mn>2</mn><mtext> </mtext><mi mathvariant=\"normal\">H</mi><msup><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mo lspace=\"0em\" rspace=\"0em\">+</mo></msup></mrow></mpadded><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mrow></mrow><mo>+</mo><mrow></mrow><mn>2</mn><mtext> </mtext><mrow><mi mathvariant=\"normal\">O</mi><mi mathvariant=\"normal\">H</mi></mrow><msup><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mo lspace=\"0em\" rspace=\"0em\">−</mo></msup></mrow></mpadded></munderover><mi><munder><mo><mrow><mrow><mi mathvariant=\"normal\">Z</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">O</mi><mi mathvariant=\"normal\">H</mi></mrow><mo stretchy=\"false\">)</mo><msub><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mpadded height=\"0px\"><mn>2</mn></mpadded></msub><mo>↓</mo><mrow></mrow></mrow></mo><mtext>amphoteres Hydroxid</mtext></munder></mi><munderover><mo stretchy=\"true\" minsize=\"3.0em\">⇌</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mrow></mrow><mo>+</mo><mrow></mrow><mn>2</mn><mtext> </mtext><mi mathvariant=\"normal\">H</mi><msup><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mo lspace=\"0em\" rspace=\"0em\">+</mo></msup></mrow></mpadded><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mrow></mrow><mo>+</mo><mrow></mrow><mn>2</mn><mtext> </mtext><mrow><mi mathvariant=\"normal\">O</mi><mi mathvariant=\"normal\">H</mi></mrow><msup><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mo lspace=\"0em\" rspace=\"0em\">−</mo></msup></mrow></mpadded></munderover><mi><munder><mo><mrow><mo stretchy=\"false\">[</mo><mrow><mi mathvariant=\"normal\">Z</mi><mi mathvariant=\"normal\">n</mi></mrow><mo stretchy=\"false\">(</mo><mrow><mi mathvariant=\"normal\">O</mi><mi mathvariant=\"normal\">H</mi></mrow><mo stretchy=\"false\">)</mo><msub><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mpadded height=\"0px\"><mn>4</mn></mpadded></msub><mo stretchy=\"false\">]</mo><msup><mpadded width=\"0px\"><mphantom><mi>X</mi></mphantom></mpadded><mrow><mn>2</mn><mo>−</mo></mrow></msup></mrow></mo><mtext>Hydroxozikat</mtext></munder></mi></mrow><annotation encoding=\"application/x-tex\">\\ce{Zn^2+  &lt;=&gt;[+ 2OH-][+ 2H+]  $\\underset{\\text{amphoteres Hydroxid}}{\\ce{Zn(OH)2 v}}$  &lt;=&gt;[+ 2OH-][+ 2H+]  $\\underset{\\text{Hydroxozikat}}{\\ce{[Zn(OH)4]^2-}}$}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4506em;vertical-align:-1.1382em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Zn</span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord rlap\"><span class=\"inner\"><span class=\"mord\" style=\"color:transparent;\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8873em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\">+</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3124em;\"><span style=\"top:-3.435em;\"><span class=\"pstrut\" style=\"height:2.716em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mtight\"></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"></span><span class=\"mord mtight\">2</span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">OH</span></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord rlap mtight\"><span class=\"inner\"><span class=\"mord mtight\" style=\"color:transparent;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8477em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.608em;\"><span class=\"pstrut\" style=\"height:2.716em;\"></span><span class=\"stretchy\" style=\"height:0.716em;min-width:1.75em;\"><span class=\"halfarrow-left\" style=\"height:0.716em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='0.716em' viewBox='0 0 400000 716' preserveAspectRatio='xMinYMin slice'><path d='M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z'/></svg></span><span class=\"halfarrow-right\" style=\"height:0.716em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='0.716em' viewBox='0 0 400000 716' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z'/></svg></span></span></span><span style=\"top:-1.974em;\"><span class=\"pstrut\" style=\"height:2.716em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mtight\"></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"></span><span class=\"mord mtight\">2</span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mathrm mtight\">H</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord rlap mtight\"><span class=\"inner\"><span class=\"mord mtight\" style=\"color:transparent;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7471em;\"><span style=\"top:-2.8305em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8003em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.75em;\"><span style=\"top:-2.0979em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">amphoteres Hydroxid</span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Zn</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">OH</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord rlap\"><span class=\"inner\"><span class=\"mord\" style=\"color:transparent;\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.15em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↓</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1382em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3124em;\"><span style=\"top:-3.435em;\"><span class=\"pstrut\" style=\"height:2.716em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mtight\"></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"></span><span class=\"mord mtight\">2</span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">OH</span></span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord rlap mtight\"><span class=\"inner\"><span class=\"mord mtight\" style=\"color:transparent;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8477em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.608em;\"><span class=\"pstrut\" style=\"height:2.716em;\"></span><span class=\"stretchy\" style=\"height:0.716em;min-width:1.75em;\"><span class=\"halfarrow-left\" style=\"height:0.716em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='0.716em' viewBox='0 0 400000 716' preserveAspectRatio='xMinYMin slice'><path d='M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z'/></svg></span><span class=\"halfarrow-right\" style=\"height:0.716em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='0.716em' viewBox='0 0 400000 716' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z'/></svg></span></span></span><span style=\"top:-1.974em;\"><span class=\"pstrut\" style=\"height:2.716em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mtight\"></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"></span><span class=\"mord mtight\">2</span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mathrm mtight\">H</span><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord rlap mtight\"><span class=\"inner\"><span class=\"mord mtight\" style=\"color:transparent;\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7471em;\"><span style=\"top:-2.8305em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8003em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8873em;\"><span style=\"top:-2.0979em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">Hydroxozikat</span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\"><span class=\"mord\"><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathrm\">Zn</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathrm\">OH</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord rlap\"><span class=\"inner\"><span class=\"mord\" style=\"color:transparent;\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.15em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord rlap\"><span class=\"inner\"><span class=\"mord\" style=\"color:transparent;\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;color:transparent;\">X</span></span></span><span class=\"fix\"></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8873em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\">−</span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1382em;\"><span></span></span></span></span></span></span></span></span></span></span></span>`}</p><h2 id=\"footnotes\"><a href=\"#footnotes\">Footnotes</a></h2>\n<p>Here&#39;s a simple footnote,<sup id=\"fnref:1\"><a href=\"#fn:1\">1</a></sup> and here&#39;s a longer one.<sup id=\"fnref:bignote\"><a href=\"#fn:bignote\">2</a></sup></p>\n<h2 id=\"info-block\"><a href=\"#info-block\">Info Block</a></h2>\n<InfoBox statusType=\"info\" statusName=\"This is the title\"><p>This is the content: <strong><em>The</em></strong> <em>quick</em> <u>brown</u> <a href=\"https://www.foxnews.com/\" rel=\"external\" >fox</a> <code class=\"inline-code-block\">jumps</code> <del>over</del> the lazy <strong>dog</strong>.</p>\n</InfoBox>\n<h2 id=\"table\"><a href=\"#table\">Table</a></h2>\n<table>\n<thead>\n<tr>\n<th >Table Header 1</th>\n<th >Table Header 2</th>\n<th >Table Header 3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td >Division 1</td>\n<td >Division 2</td>\n<td >Division 3</td>\n</tr>\n<tr>\n<td >Division 1</td>\n<td >Division 2</td>\n<td >Division 3</td>\n</tr>\n<tr>\n<td >Division 1</td>\n<td >Division 2</td>\n<td >Division 3</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th class=\"text-left\">Align Left</th>\n<th class=\"text-center\">Align Center</th>\n<th class=\"text-right\">Align Right</th>\n</tr>\n</thead>\n<tbody><tr>\n<td class=\"text-left\">Division 1</td>\n<td class=\"text-center\">Division 2</td>\n<td class=\"text-right\">Division 3</td>\n</tr>\n<tr>\n<td class=\"text-left\">Division 1</td>\n<td class=\"text-center\">Division 2</td>\n<td class=\"text-right\">Division 3</td>\n</tr>\n<tr>\n<td class=\"text-left\">Division 1</td>\n<td class=\"text-center\">Division 2</td>\n<td class=\"text-right\">Division 3</td>\n</tr>\n</tbody></table>\n<h2 id=\"code-block\"><a href=\"#code-block\">Code Block</a></h2>\n<div class=\"code-block titled \"><h2 class=\"code-title\">examples/index.ts</h2><CodeCopy><pre><code class=\"language-ts\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div>`}</code></pre></CodeCopy></div>\n<div class=\"code-block titled showLineNumber\"><h2 class=\"code-title\">typescript-helloworld.ts</h2><CodeCopy><pre><code class=\"language-ts\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">1</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeter</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">2</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">public</span> greeting<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">3</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">    <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">4</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">        <span class=\"token keyword\">return</span> <span class=\"token string\">\"&lt;h1>\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>greeting <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/h1>\"</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line line-highlight\"><div class=\"code-linenotation\"><span class=\"line-number\">5</span><span class=\"line-diff\"> </span></div><div class=\"code-content\">    <span class=\"token punctuation\">}</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">6</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"line-number\">7</span><span class=\"line-diff\"> </span></div><div class=\"code-content\"></div></div><div class=\"code-line line-addition\"><div class=\"code-linenotation\"><span class=\"line-number\">8</span><span class=\"line-diff\">+</span></div><div class=\"code-content\"><span class=\"token keyword\">var</span> greeter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Greeter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, Ministry of Programming!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line line-addition\"><div class=\"code-linenotation\"><span class=\"line-number\">9</span><span class=\"line-diff\">+</span></div><div class=\"code-content\"><span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> greeter<span class=\"token punctuation\">.</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line line-subtraction\"><div class=\"code-linenotation\"><span class=\"line-number\">10</span><span class=\"line-diff\">-</span></div><div class=\"code-content\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"image\"><a href=\"#image\">Image</a></h2>\n<p>Just image</p>\n<p><ImgZoom src=\"/example/example1.jpg\" alt=\"Example1\"></ImgZoom></p>\n<p>Image with subtitle</p>\n<ImgZoom src=\"/example/example1.jpg\" alt=\"Example1\" class=\"h-full object-cover\">\nPhoto by <a href=\"https://unsplash.com/@willy24?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Ioana Tabarcea</a> on <a href=\"https://unsplash.com/s/photos/morning?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n</ImgZoom>\n\n<p>Shared image from <code class=\"inline-code-block\">/user/assets/shared/</code></p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-md\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">github-mark-svg</span>](<span class=\"token url\">/shared/github-mark.svg</span>)</span></div></div>`}</code></pre></CodeCopy></div>\n<p><ImgZoom src=\"/shared/github-mark.svg\" alt=\"github-mark-svg\"></ImgZoom></p>\n<h2 id=\"videos-gif\"><a href=\"#videos-gif\">Videos / GIF</a></h2>\n<p><Video mp4=\"/example/example2.mp4\" id=\"MP4 Example\" /></p>\n<h2 id=\"youtube\"><a href=\"#youtube\">Youtube</a></h2>\n<Youtube id=\"ZXsQAXx_ao0\"/>\n\n<h2 id=\"custom-svelte-component\"><a href=\"#custom-svelte-component\">Custom Svelte Component</a></h2>\n<div class=\"p4 border-1 shadow-xl rounded-xl border-black dark:border-white overflow-auto\">\n  <Folder name=\"config\" files={configFolder} expanded/>\n</div>\n\n<div class=\"my4\">\n  <Custom name=\"custom object\" />\n</div>\n\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-svelte\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">  <span class=\"token keyword\">const</span> const_variable <span class=\"token operator\">=</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">Variable is <span class=\"token language-javascript\"><span class=\"token punctuation\">{</span>const_variable<span class=\"token punctuation\">}</span></span></div></div>`}</code></pre></CodeCopy></div>\n<p>Variable is {const_variable}</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-svelte\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">{(function () {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">const guess = Math.random()</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if (guess > 0.66) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">return &#96;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>color: tomato<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Look at us.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>&#96;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">if (guess > 0.33) {</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">return &#96;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>color: violet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Who would have guessed?!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>&#96;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">}</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">return &#96;<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>color: goldenrod<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Not me.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>&#96;</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">})()}</div></div>`}</code></pre></CodeCopy></div>\n<p>{@html (function () {\nconst guess = Math.random()\n\nif (guess > 0.66) {\nreturn `<span style=\"color: tomato\">Look at us.</span>`\n}\n\nif (guess > 0.33) {\nreturn `<span style=\"color: violet\">Who would have guessed?!</span>`\n}\n\nreturn `<span style=\"color: goldenrod\">Not me.</span>`\n})()}</p>\n<h2 id=\"end\"><a href=\"#end\">👍 END</a></h2>\n\n  <hr />\n  <ol>\n    <li id=\"fn:1\" class=\"footnote\"><p>This is the first footnote.</p>\n<a href=\"#fnref:1\">↩</a></li>\n<li id=\"fn:bignote\" class=\"footnote\"><p>Here&#39;s one with multiple paragraphs and code.<br>    Indent paragraphs to include them in the footnote.<br>    <code class=\"inline-code-block\">&lcub; my code &rcub;</code><br>    Add as many paragraphs as you like.</p>\n<a href=\"#fnref:bignote\">↩</a></li>\n  </ol>\n  ",
      "tags": [
        "Markdown",
        "Year-2022",
        "Language-English"
      ]
    },
    {
      "id": "quick-start",
      "url": "https://naya-an-tech.github.io/quick-start",
      "title": "Quick Start",
      "summary": "✨ Just a QuickStart guide",
      "image": "/quick-start/cover.jpg",
      "date_published": "2022-08-08T00:00:00.000+08:00",
      "date_modified": "2022-09-15T21:00:00.000+08:00",
      "content_text": "✨ INTRO\n\nQWER [https://www.github.com/kwchang0831/svelte-QWER] is simply an Awesome blog\nstarter and static site generator. Built using SvelteKit\n[https://kit.svelte.dev/] and Love ❤.\n\n\n🎉 TRY OUT QWER\n\nCreate a QWER blog named my-blog.\n\n{@html String.raw`\nnpx degit kwchang0831/svelte-QWER my-blog`}\n\n\n⚡️ TO DEV\n\n 1. Install all the dependencies.\n    \n    {@html String.raw`\n    pnpm i`}\n\n 2. Start local dev server.\n    \n    {@html String.raw`\n    pnpm dev`}\n\n 3. Sever is running. Open browser to see the result.\n    \n    {@html String.raw`\n    VITE v3.1.1  ready in 1080 ms\n    \n    ➜  Local:   http://localhost:5173/\n    ➜  Network: use --host to expose`}\n\n\n🚀 TO DEPLOY\n\n 1. Create a free Vercel [https://vercel.com/] account.\n\n 2. Install Vercel CLI\n    \n    {@html String.raw`\n    npm i -g vercel`}\n\n 3. Using the vercel command from the root of a project directory.\n    \n    {@html String.raw`\n    vercel`}\n    \n    You will be asked to login for the first time. Simply follow the prompts.\n\n 4. Deploy as Production build\n    \n    {@html String.raw`\n    vercel deploy --prod`}\n\n\n📚 LEARN MORE\n\nHere is our Documentation: https://docs-svelte-qwer.vercel.app/\n[https://docs-svelte-qwer.vercel.app/].\n\n\n👍 END",
      "content_html": "<h2 id=\"intro\"><a href=\"#intro\">✨ Intro</a></h2>\n<p><a href=\"https://www.github.com/kwchang0831/svelte-QWER\" rel=\"external\" >QWER</a> is simply an Awesome blog starter and static site generator. Built using <a href=\"https://kit.svelte.dev/\" rel=\"external\" >SvelteKit</a> and Love ❤.</p>\n<h2 id=\"try-out-qwer\"><a href=\"#try-out-qwer\">🎉 Try out QWER</a></h2>\n<p>Create a QWER blog named <code class=\"inline-code-block\">my-blog</code>.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">npx degit kwchang0831/svelte-QWER my-blog</div></div>`}</code></pre></CodeCopy></div>\n<h2 id=\"to-dev\"><a href=\"#to-dev\">⚡️ To Dev</a></h2>\n<ol>\n<li><p>Install all the dependencies.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">pnpm</span> i</div></div>`}</code></pre></CodeCopy></div>\n</li>\n<li><p>Start local dev server.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">pnpm</span> dev</div></div>`}</code></pre></CodeCopy></div>\n</li>\n<li><p>Sever is running. Open browser to see the result.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">VITE v3.1.1  ready <span class=\"token keyword\">in</span> <span class=\"token number\">1080</span> ms</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"></div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">➜  Local:   http://localhost:5173/</div></div><div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">➜  Network: use <span class=\"token parameter variable\">--host</span> to expose</div></div>`}</code></pre></CodeCopy></div>\n</li>\n</ol>\n<h2 id=\"to-deploy\"><a href=\"#to-deploy\">🚀 To Deploy</a></h2>\n<ol>\n<li><p>Create a free <a href=\"https://vercel.com/\" rel=\"external\" >Vercel</a> account.</p>\n</li>\n<li><p>Install Vercel CLI</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\"><span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> vercel</div></div>`}</code></pre></CodeCopy></div>\n</li>\n<li><p>Using the vercel command from the root of a project directory.</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">vercel</div></div>`}</code></pre></CodeCopy></div>\n<p>You will be asked to login for the first time. Simply follow the prompts.</p>\n</li>\n<li><p>Deploy as Production build</p>\n<div class=\"code-block  \"><CodeCopy><pre><code class=\"language-sh\">{@html String.raw`<div class=\"code-line\"><div class=\"code-linenotation\"><span class=\"no-line-number\"></span><span class=\"no-line-diff\"></span></div><div class=\"code-content\">vercel deploy <span class=\"token parameter variable\">--prod</span></div></div>`}</code></pre></CodeCopy></div>\n</li>\n</ol>\n<h2 id=\"learn-more\"><a href=\"#learn-more\">📚 Learn More</a></h2>\n<p>Here is our Documentation: <a href=\"https://docs-svelte-qwer.vercel.app/\" rel=\"external\" >https://docs-svelte-qwer.vercel.app/</a>.</p>\n<h2 id=\"end\"><a href=\"#end\">👍 END</a></h2>\n",
      "tags": [
        "QWER",
        "Year-2022",
        "Language-English"
      ]
    }
  ]
}