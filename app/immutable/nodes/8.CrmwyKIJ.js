import{s as ie,e as o,b as v,c as i,f as r,g,h as f,d,a as m,i as y,k as a,H,l as P,n as M}from"../chunks/scheduler.DJEw_kJ_.js";import{S as ce,i as de,c as k,a as _,m as b,t as w,b as E,d as C}from"../chunks/index.BN7hZ-gT.js";import{P as pe,I as Nn}from"../chunks/post.C3wZAPR7.js";import{C as x}from"../chunks/code_copy.DLkmWeWK.js";function re($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">brew <span class="token function">install</span> act </div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-bash")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function ve($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># 기본 workflow 목록 가져오기</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token parameter variable">-l</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># m 시리즈 mac일 경우</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token parameter variable">-l</span> --container-architecture linux/amd64</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># 특정한 job들만 확인하기</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token parameter variable">-j</span> job_name <span class="token parameter variable">-l</span></div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-shell")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function fe($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># (기본)</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># (기본), m시리즈 mac일 경우</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act --container-architecture linux/amd64</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># 특정 이벤트 트리거</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act pull_request</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># 특정한 job만 실행하기</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token parameter variable">-j</span> job_name</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token comment"># 특정한 workflow만 실행하기</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token parameter variable">-j</span> jobID <span class="token parameter variable">-W</span> .github/workflows/<span class="token punctuation">[</span>Selected-Workflow<span class="token punctuation">]</span>.yml</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-shell")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function ue($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token parameter variable">-s</span> <span class="token assign-left variable">KEY</span><span class="token operator">=</span>VALUE</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-bash")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function me($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"># my.secrets</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">KEY=Value</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">KEY=Value</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">KEY=Value</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">KEY=Value</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">KEY=Value</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-plain")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function he($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act --secret-file my.secrets</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-bash")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function $e($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token assign-left variable">SSH_PRIVATE_KEY</span><span class="token operator">=</span><span class="token string">"-----BEGIN EC PRIVATE KEY-----</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">...</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">-----END EC PRIVATE KEY-----"</span></div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-bash")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function ge($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">INFO<span class="token punctuation">[</span>0000<span class="token punctuation">]</span> Using <span class="token function">docker</span> <span class="token function">host</span> <span class="token string">'unix:///var/run/docker.sock'</span>, and daemon socket <span class="token string">'unix:///var/run/docker.sock'</span> </div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">WARN  ⚠ You are using Apple M-series chip and you have not specified container architecture, you might encounter issues <span class="token keyword">while</span> running act. If so, try running it with <span class="token string">'--container-architecture linux/amd64'</span><span class="token builtin class-name">.</span> ⚠  </div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">? Please choose the default image you want to use with act:</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">  - Large size image: ca. 17GB download + <span class="token number">53</span>.1GB storage, you will need 75GB of <span class="token function">free</span> disk space, snapshots of GitHub Hosted Runners without snap and pulled <span class="token function">docker</span> images</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">  - Medium size image: ~500MB, includes only necessary tools to bootstrap actions and aims to be compatible with <span class="token function">most</span> actions</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">  - Micro size image: <span class="token operator">&lt;</span>200MB, contains only NodeJS required to bootstrap actions, doesn't work with all actions</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">Default image and other options can be changed manually <span class="token keyword">in</span> ~/.actrc <span class="token punctuation">(</span>please refer to https://github.com/nektos/act<span class="token comment">#configuration for additional information about file structure)  [Use arrows to move, type to filter, ? for more help]</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">  Large</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token operator">></span> Medium</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">  Micro</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-bash")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function ke($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"> Medium</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token punctuation">[</span>gitops test/manifest-test<span class="token punctuation">]</span> 🚀  Start <span class="token assign-left variable">image</span><span class="token operator">=</span>catthehacker/ubuntu:act-20.04</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token punctuation">[</span>gitops test/manifest-test<span class="token punctuation">]</span>   🐳  <span class="token function">docker</span> pull <span class="token assign-left variable">image</span><span class="token operator">=</span>catthehacker/ubuntu:act-20.04 <span class="token assign-left variable">platform</span><span class="token operator">=</span> <span class="token assign-left variable">username</span><span class="token operator">=</span> <span class="token assign-left variable">forcePull</span><span class="token operator">=</span>true</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token punctuation">[</span>gitops test/manifest-test<span class="token punctuation">]</span> using DockerAuthConfig authentication <span class="token keyword">for</span> <span class="token function">docker</span> pull</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-bash")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function _e($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to Kubernetes</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token key atrule">on</span><span class="token punctuation">:</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">  <span class="token key atrule">push</span><span class="token punctuation">:</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    <span class="token key atrule">branches</span><span class="token punctuation">:</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">      <span class="token punctuation">-</span> main</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"><span class="token key atrule">jobs</span><span class="token punctuation">:</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">  <span class="token key atrule">deploy</span><span class="token punctuation">:</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    <span class="token key atrule">steps</span><span class="token punctuation">:</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout code</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">      <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Kubernetes CLI</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">      <span class="token key atrule">uses</span><span class="token punctuation">:</span> azure/setup<span class="token punctuation">-</span>kubectl@v1</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">      <span class="token key atrule">with</span><span class="token punctuation">:</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">        <span class="token key atrule">version</span><span class="token punctuation">:</span> v1.21.0</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Authenticate to Kubernetes cluster</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">        echo "&#36;{{ secrets.KUBE_CONFIG }}" | base64 --decode > &#36;HOME/.kube/config</span></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy to Kubernetes</div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></div></div><div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">        kubectl apply -f k8s/</span></div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-yaml")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function be($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token punctuation">-</span>W .github/workflows/deploy.yaml</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-yaml")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function we($){let n,e,l,h=String.raw`<div class="code-line"><div class="code-linenotation"><span class="no-line-number"></span><span class="no-line-diff"></span></div><div class="code-content">act <span class="token punctuation">-</span>j deploy</div></div>`+"";return{c(){n=o("pre"),e=o("code"),l=new H(!1),this.h()},l(t){n=i(t,"PRE",{});var c=r(n);e=i(c,"CODE",{class:!0});var u=r(e);l=P(u,!1),u.forEach(d),c.forEach(d),this.h()},h(){l.a=null,m(e,"class","language-yaml")},m(t,c){y(t,n,c),a(n,e),l.m(h,e)},p:M,d(t){t&&d(n)}}}function Ee($){let n,e,l=`develop branch 가 업데이트되거나, pr이 생성되었을 때마다 테스트를 실행하거나, release tag가 생성되어 프로덕션을
      빌드를 자동화하기위해 gitops, workflows를 작성하곤한다.`,h,t,c=`매번 git repo에 올려가며 테스트해왔으나, 번거로움이 많아 로컬에서 동일한 환경을 구축하여 git action을 테스트 해본
      뒤 커밋하기위해 로컬 환경을 구축해보자.`,u,A,Is='<a href="#act">Act 설치</a>',Wn,tn,Ss="먼저 act를 설치합니다.",Fn,ln,D,Jn,Mn,U,Qn,Dn,B,Xn,on,js="설치가 완료되었다. act는 도커를 사용하고있으므로, 도커가 미리 설치되어있어야합니다.",Zn,cn,Vs="작업중인 repo로 진입하여 아래의 workflow들을 확인해 본다.",ns,G,Rs='<a href="#workflow">workflow 기본 명령어</a>',ss,dn,T,es,N,Ks='<a href="#workflow">workflow 로컬에서 실행</a>',as,pn,L,ts,q,Os='<a href="#secret">SECRET 설정</a>',ls,W,zs='<a href="#arg">실행시 arg로 넘기기</a>',os,rn,I,is,F,Ys='<a href="#my-secret">파일로 관리하기 my.secret</a>',cs,vn,As="** 주의! .gitignore에 my.secret을 등록해두어, commit에 포함되지않도록 잘 관리하길 바란다.",ds,fn,S,ps,un,j,rs,mn,Us="SSH_KEY 같은 경우 라인을 많이 차지하고, +와같은 특수문자로인해 파싱애러가 날때가 있습니다.",vs,hn,Bs="이럴땐 “ “ 쌍따옴표로 묶어서 사용하도록하자.",fs,$n,V,us,J,Gs='<a href="#act">act 실행</a>',ms,gn,Ns="처음 실행하면, act runner docker image를 다운받으려한다. 적당히 미디움으로 선택합니다.",hs,kn,R,$s,Tn,Q,gs,_n,K,ks,X,qs='<a href="#">실습</a>',_s,bn,Ws=".github/workflows 경로에 deploy.yaml 을 하나 작성합니다.",bs,wn,O,ws,Z,Fs='<a href="#">워크플로우 목록 확인하기</a>',Es,En,Js="act -l 로 워크플로우 목록을 확인합니다.",Cs,Ln,nn,ys,Cn,Qs="m시리즈 맥북의경우 아키텍쳐 경고가 나옵니다. --container-architecture linux/amd64 옵션을 추가합니다.",xs,In,sn,Hs,en,Xs='<a href="#">특정 워크플로우 실행</a>',Ps,yn,Zs="하나의 워크플로우를 전체 실행하고싶다면 -W 옵션으로 workflow yaml을 지정하여 실행",Ms,xn,z,Ds,an,ne='<a href="#">특정 잡 실행</a>',Ts,Hn,se="-j 옵션을 통해 -l 리스트에서 본 job id 로 실행합니다.",Ls,Pn,Y,qn;return D=new x({props:{$$slots:{default:[re]},$$scope:{ctx:$}}}),U=new Nn({props:{src:"/gitops-local-setting-with-act/0_Untitled.png",alt:"image"}}),B=new Nn({props:{src:"/gitops-local-setting-with-act/1_Untitled.png",alt:"image"}}),T=new x({props:{$$slots:{default:[ve]},$$scope:{ctx:$}}}),L=new x({props:{$$slots:{default:[fe]},$$scope:{ctx:$}}}),I=new x({props:{$$slots:{default:[ue]},$$scope:{ctx:$}}}),S=new x({props:{$$slots:{default:[me]},$$scope:{ctx:$}}}),j=new x({props:{$$slots:{default:[he]},$$scope:{ctx:$}}}),V=new x({props:{$$slots:{default:[$e]},$$scope:{ctx:$}}}),R=new x({props:{$$slots:{default:[ge]},$$scope:{ctx:$}}}),Q=new Nn({props:{src:"/gitops-local-setting-with-act/2_Untitled.png",alt:"image"}}),K=new x({props:{$$slots:{default:[ke]},$$scope:{ctx:$}}}),O=new x({props:{$$slots:{default:[_e]},$$scope:{ctx:$}}}),nn=new Nn({props:{src:"/gitops-local-setting-with-act/3_Untitled.png",alt:"image"}}),sn=new Nn({props:{src:"/gitops-local-setting-with-act/4_Untitled.png",alt:"image"}}),z=new x({props:{$$slots:{default:[be]},$$scope:{ctx:$}}}),Y=new x({props:{$$slots:{default:[we]},$$scope:{ctx:$}}}),{c(){n=o("article"),e=o("p"),e.textContent=l,h=v(),t=o("p"),t.textContent=c,u=v(),A=o("h1"),A.innerHTML=Is,Wn=v(),tn=o("p"),tn.textContent=Ss,Fn=v(),ln=o("div"),k(D.$$.fragment),Jn=v(),Mn=o("p"),k(U.$$.fragment),Qn=v(),Dn=o("p"),k(B.$$.fragment),Xn=v(),on=o("p"),on.textContent=js,Zn=v(),cn=o("p"),cn.textContent=Vs,ns=v(),G=o("h2"),G.innerHTML=Rs,ss=v(),dn=o("div"),k(T.$$.fragment),es=v(),N=o("h2"),N.innerHTML=Ks,as=v(),pn=o("div"),k(L.$$.fragment),ts=v(),q=o("h1"),q.innerHTML=Os,ls=v(),W=o("h2"),W.innerHTML=zs,os=v(),rn=o("div"),k(I.$$.fragment),is=v(),F=o("h2"),F.innerHTML=Ys,cs=v(),vn=o("p"),vn.textContent=As,ds=v(),fn=o("div"),k(S.$$.fragment),ps=v(),un=o("div"),k(j.$$.fragment),rs=v(),mn=o("p"),mn.textContent=Us,vs=v(),hn=o("p"),hn.textContent=Bs,fs=v(),$n=o("div"),k(V.$$.fragment),us=v(),J=o("h1"),J.innerHTML=Gs,ms=v(),gn=o("p"),gn.textContent=Ns,hs=v(),kn=o("div"),k(R.$$.fragment),$s=v(),Tn=o("p"),k(Q.$$.fragment),gs=v(),_n=o("div"),k(K.$$.fragment),ks=v(),X=o("h1"),X.innerHTML=qs,_s=v(),bn=o("p"),bn.textContent=Ws,bs=v(),wn=o("div"),k(O.$$.fragment),ws=v(),Z=o("h2"),Z.innerHTML=Fs,Es=v(),En=o("p"),En.textContent=Js,Cs=v(),Ln=o("p"),k(nn.$$.fragment),ys=v(),Cn=o("p"),Cn.textContent=Qs,xs=v(),In=o("p"),k(sn.$$.fragment),Hs=v(),en=o("h2"),en.innerHTML=Xs,Ps=v(),yn=o("p"),yn.textContent=Zs,Ms=v(),xn=o("div"),k(z.$$.fragment),Ds=v(),an=o("h2"),an.innerHTML=ne,Ts=v(),Hn=o("p"),Hn.textContent=se,Ls=v(),Pn=o("div"),k(Y.$$.fragment),this.h()},l(p){n=i(p,"ARTICLE",{slot:!0});var s=r(n);e=i(s,"P",{"data-svelte-h":!0}),g(e)!=="svelte-74m2f2"&&(e.textContent=l),h=f(s),t=i(s,"P",{"data-svelte-h":!0}),g(t)!=="svelte-194knjw"&&(t.textContent=c),u=f(s),A=i(s,"H1",{id:!0,"data-svelte-h":!0}),g(A)!=="svelte-1ynt7n6"&&(A.innerHTML=Is),Wn=f(s),tn=i(s,"P",{"data-svelte-h":!0}),g(tn)!=="svelte-100a8pl"&&(tn.textContent=Ss),Fn=f(s),ln=i(s,"DIV",{class:!0});var Sn=r(ln);_(D.$$.fragment,Sn),Sn.forEach(d),Jn=f(s),Mn=i(s,"P",{});var jn=r(Mn);_(U.$$.fragment,jn),jn.forEach(d),Qn=f(s),Dn=i(s,"P",{});var Vn=r(Dn);_(B.$$.fragment,Vn),Vn.forEach(d),Xn=f(s),on=i(s,"P",{"data-svelte-h":!0}),g(on)!=="svelte-1u20sxy"&&(on.textContent=js),Zn=f(s),cn=i(s,"P",{"data-svelte-h":!0}),g(cn)!=="svelte-vkaja"&&(cn.textContent=Vs),ns=f(s),G=i(s,"H2",{id:!0,"data-svelte-h":!0}),g(G)!=="svelte-n19kqn"&&(G.innerHTML=Rs),ss=f(s),dn=i(s,"DIV",{class:!0});var Rn=r(dn);_(T.$$.fragment,Rn),Rn.forEach(d),es=f(s),N=i(s,"H2",{id:!0,"data-svelte-h":!0}),g(N)!=="svelte-epemv2"&&(N.innerHTML=Ks),as=f(s),pn=i(s,"DIV",{class:!0});var Kn=r(pn);_(L.$$.fragment,Kn),Kn.forEach(d),ts=f(s),q=i(s,"H1",{id:!0,"data-svelte-h":!0}),g(q)!=="svelte-1mb3jqp"&&(q.innerHTML=Os),ls=f(s),W=i(s,"H2",{id:!0,"data-svelte-h":!0}),g(W)!=="svelte-33vl4j"&&(W.innerHTML=zs),os=f(s),rn=i(s,"DIV",{class:!0});var On=r(rn);_(I.$$.fragment,On),On.forEach(d),is=f(s),F=i(s,"H2",{id:!0,"data-svelte-h":!0}),g(F)!=="svelte-c8bvsi"&&(F.innerHTML=Ys),cs=f(s),vn=i(s,"P",{"data-svelte-h":!0}),g(vn)!=="svelte-1jwuhfr"&&(vn.textContent=As),ds=f(s),fn=i(s,"DIV",{class:!0});var zn=r(fn);_(S.$$.fragment,zn),zn.forEach(d),ps=f(s),un=i(s,"DIV",{class:!0});var Yn=r(un);_(j.$$.fragment,Yn),Yn.forEach(d),rs=f(s),mn=i(s,"P",{"data-svelte-h":!0}),g(mn)!=="svelte-1subg81"&&(mn.textContent=Us),vs=f(s),hn=i(s,"P",{"data-svelte-h":!0}),g(hn)!=="svelte-1xgh11"&&(hn.textContent=Bs),fs=f(s),$n=i(s,"DIV",{class:!0});var An=r($n);_(V.$$.fragment,An),An.forEach(d),us=f(s),J=i(s,"H1",{id:!0,"data-svelte-h":!0}),g(J)!=="svelte-1mkw1i9"&&(J.innerHTML=Gs),ms=f(s),gn=i(s,"P",{"data-svelte-h":!0}),g(gn)!=="svelte-apf0sj"&&(gn.textContent=Ns),hs=f(s),kn=i(s,"DIV",{class:!0});var Un=r(kn);_(R.$$.fragment,Un),Un.forEach(d),$s=f(s),Tn=i(s,"P",{});var Bn=r(Tn);_(Q.$$.fragment,Bn),Bn.forEach(d),gs=f(s),_n=i(s,"DIV",{class:!0});var Gn=r(_n);_(K.$$.fragment,Gn),Gn.forEach(d),ks=f(s),X=i(s,"H1",{id:!0,"data-svelte-h":!0}),g(X)!=="svelte-th4jop"&&(X.innerHTML=qs),_s=f(s),bn=i(s,"P",{"data-svelte-h":!0}),g(bn)!=="svelte-fdmvum"&&(bn.textContent=Ws),bs=f(s),wn=i(s,"DIV",{class:!0});var ee=r(wn);_(O.$$.fragment,ee),ee.forEach(d),ws=f(s),Z=i(s,"H2",{id:!0,"data-svelte-h":!0}),g(Z)!=="svelte-190pohp"&&(Z.innerHTML=Fs),Es=f(s),En=i(s,"P",{"data-svelte-h":!0}),g(En)!=="svelte-9cmyjj"&&(En.textContent=Js),Cs=f(s),Ln=i(s,"P",{});var ae=r(Ln);_(nn.$$.fragment,ae),ae.forEach(d),ys=f(s),Cn=i(s,"P",{"data-svelte-h":!0}),g(Cn)!=="svelte-1h1ctgr"&&(Cn.textContent=Qs),xs=f(s),In=i(s,"P",{});var te=r(In);_(sn.$$.fragment,te),te.forEach(d),Hs=f(s),en=i(s,"H2",{id:!0,"data-svelte-h":!0}),g(en)!=="svelte-newm4n"&&(en.innerHTML=Xs),Ps=f(s),yn=i(s,"P",{"data-svelte-h":!0}),g(yn)!=="svelte-1y3czz8"&&(yn.textContent=Zs),Ms=f(s),xn=i(s,"DIV",{class:!0});var le=r(xn);_(z.$$.fragment,le),le.forEach(d),Ds=f(s),an=i(s,"H2",{id:!0,"data-svelte-h":!0}),g(an)!=="svelte-ndzpfo"&&(an.innerHTML=ne),Ts=f(s),Hn=i(s,"P",{"data-svelte-h":!0}),g(Hn)!=="svelte-3ys6bu"&&(Hn.textContent=se),Ls=f(s),Pn=i(s,"DIV",{class:!0});var oe=r(Pn);_(Y.$$.fragment,oe),oe.forEach(d),s.forEach(d),this.h()},h(){m(A,"id","act"),m(ln,"class","code-block"),m(G,"id","workflow"),m(dn,"class","code-block"),m(N,"id","workflow"),m(pn,"class","code-block"),m(q,"id","secret"),m(W,"id","arg"),m(rn,"class","code-block"),m(F,"id","my-secret"),m(fn,"class","code-block"),m(un,"class","code-block"),m($n,"class","code-block"),m(J,"id","act"),m(kn,"class","code-block"),m(_n,"class","code-block"),m(X,"id",""),m(wn,"class","code-block"),m(Z,"id",""),m(en,"id",""),m(xn,"class","code-block"),m(an,"id",""),m(Pn,"class","code-block"),m(n,"slot","post_content")},m(p,s){y(p,n,s),a(n,e),a(n,h),a(n,t),a(n,u),a(n,A),a(n,Wn),a(n,tn),a(n,Fn),a(n,ln),b(D,ln,null),a(n,Jn),a(n,Mn),b(U,Mn,null),a(n,Qn),a(n,Dn),b(B,Dn,null),a(n,Xn),a(n,on),a(n,Zn),a(n,cn),a(n,ns),a(n,G),a(n,ss),a(n,dn),b(T,dn,null),a(n,es),a(n,N),a(n,as),a(n,pn),b(L,pn,null),a(n,ts),a(n,q),a(n,ls),a(n,W),a(n,os),a(n,rn),b(I,rn,null),a(n,is),a(n,F),a(n,cs),a(n,vn),a(n,ds),a(n,fn),b(S,fn,null),a(n,ps),a(n,un),b(j,un,null),a(n,rs),a(n,mn),a(n,vs),a(n,hn),a(n,fs),a(n,$n),b(V,$n,null),a(n,us),a(n,J),a(n,ms),a(n,gn),a(n,hs),a(n,kn),b(R,kn,null),a(n,$s),a(n,Tn),b(Q,Tn,null),a(n,gs),a(n,_n),b(K,_n,null),a(n,ks),a(n,X),a(n,_s),a(n,bn),a(n,bs),a(n,wn),b(O,wn,null),a(n,ws),a(n,Z),a(n,Es),a(n,En),a(n,Cs),a(n,Ln),b(nn,Ln,null),a(n,ys),a(n,Cn),a(n,xs),a(n,In),b(sn,In,null),a(n,Hs),a(n,en),a(n,Ps),a(n,yn),a(n,Ms),a(n,xn),b(z,xn,null),a(n,Ds),a(n,an),a(n,Ts),a(n,Hn),a(n,Ls),a(n,Pn),b(Y,Pn,null),qn=!0},p(p,s){const Sn={};s&1&&(Sn.$$scope={dirty:s,ctx:p}),D.$set(Sn);const jn={};s&1&&(jn.$$scope={dirty:s,ctx:p}),T.$set(jn);const Vn={};s&1&&(Vn.$$scope={dirty:s,ctx:p}),L.$set(Vn);const Rn={};s&1&&(Rn.$$scope={dirty:s,ctx:p}),I.$set(Rn);const Kn={};s&1&&(Kn.$$scope={dirty:s,ctx:p}),S.$set(Kn);const On={};s&1&&(On.$$scope={dirty:s,ctx:p}),j.$set(On);const zn={};s&1&&(zn.$$scope={dirty:s,ctx:p}),V.$set(zn);const Yn={};s&1&&(Yn.$$scope={dirty:s,ctx:p}),R.$set(Yn);const An={};s&1&&(An.$$scope={dirty:s,ctx:p}),K.$set(An);const Un={};s&1&&(Un.$$scope={dirty:s,ctx:p}),O.$set(Un);const Bn={};s&1&&(Bn.$$scope={dirty:s,ctx:p}),z.$set(Bn);const Gn={};s&1&&(Gn.$$scope={dirty:s,ctx:p}),Y.$set(Gn)},i(p){qn||(w(D.$$.fragment,p),w(U.$$.fragment,p),w(B.$$.fragment,p),w(T.$$.fragment,p),w(L.$$.fragment,p),w(I.$$.fragment,p),w(S.$$.fragment,p),w(j.$$.fragment,p),w(V.$$.fragment,p),w(R.$$.fragment,p),w(Q.$$.fragment,p),w(K.$$.fragment,p),w(O.$$.fragment,p),w(nn.$$.fragment,p),w(sn.$$.fragment,p),w(z.$$.fragment,p),w(Y.$$.fragment,p),qn=!0)},o(p){E(D.$$.fragment,p),E(U.$$.fragment,p),E(B.$$.fragment,p),E(T.$$.fragment,p),E(L.$$.fragment,p),E(I.$$.fragment,p),E(S.$$.fragment,p),E(j.$$.fragment,p),E(V.$$.fragment,p),E(R.$$.fragment,p),E(Q.$$.fragment,p),E(K.$$.fragment,p),E(O.$$.fragment,p),E(nn.$$.fragment,p),E(sn.$$.fragment,p),E(z.$$.fragment,p),E(Y.$$.fragment,p),qn=!1},d(p){p&&d(n),C(D),C(U),C(B),C(T),C(L),C(I),C(S),C(j),C(V),C(R),C(Q),C(K),C(O),C(nn),C(sn),C(z),C(Y)}}}function Ce($){let n,e;return n=new pe({props:{$$slots:{post_content:[Ee]},$$scope:{ctx:$}}}),{c(){k(n.$$.fragment)},l(l){_(n.$$.fragment,l)},m(l,h){b(n,l,h),e=!0},p(l,[h]){const t={};h&1&&(t.$$scope={dirty:h,ctx:l}),n.$set(t)},i(l){e||(w(n.$$.fragment,l),e=!0)},o(l){E(n.$$.fragment,l),e=!1},d(l){C(n,l)}}}class Me extends ce{constructor(n){super(),de(this,n,null,Ce,ie,{})}}export{Me as component};
